{
  "ownKey": "javadoc",
  "childrenPages": {"javadoc": {
    "ownKey": "javadoc",
    "childrenPages": {"com": {
      "ownKey": "com",
      "childrenPages": {"google": {
        "ownKey": "google",
        "childrenPages": {"android": {
          "ownKey": "android",
          "childrenPages": {"jacquard": {
            "ownKey": "jacquard",
            "childrenPages": {"sdk": {
              "ownKey": "sdk",
              "childrenPages": {
                "jacquardmanager": {
                  "ownKey": "jacquardmanager",
                  "ownPages": [{
                    "reference": {
                      "path": "javadoc",
                      "baseUrl": "/JacquardSDKAndroid",
                      "fileName": "com/google/android/jacquard/sdk/jacquardmanager",
                      "extension": "html",
                      "usePrettyUrl": true,
                      "link": "/JacquardSDKAndroid/javadoc/com/google/android/jacquard/sdk/jacquardmanager"
                    },
                    "description": "",
                    "title": "JacquardManager",
                    "content": "<p>Interface for scanning for and connecting to Jacquard Tags. <br/> DO NOT forget to call JacquardManager before calling any apis.getApplicationContext\nReturns the application context\nstartScanning\nStarts scanning for Jacquard Tags.\nWhen a tag is found it is emitted on the Main Thread.\nconnect\nConnects to the provided address.\nconnect\nConnects to the provided address.\ndestroy\nReleases all allocation resources.\nforget\nReleases all observables held for the tag.\ngetInstance\nReturns a shared instance of JacquardManager.\ninit\nInitialized the sdk with provided SdkConfig object.\ngetConnectedTag\nEmits the ConnectedJacquardTag  for the address, If Tag for the address is not initiated the\nconnection process through JacquardManager then method throws IllegalStateException .\ngetConnectionStateSignal\nEmits the ConnectionState for the tag defined by address. If Tag for the address is not\ninitiated the connection process through JacquardManager , then returned signal will provide updates after the app\ninitiate the process for the address.\ngetMemoryCache<\/p>\n<p>getSdkConfig<\/p>\n<p>getBadFirmwareVersions<\/p>\n<p>setTargetUjtFirmwareVidPid\nSpecify vendor id and product id if you are looking for ujt firmware specific to your app.<\/p>\n"
                  }]
                },
                "lm": {
                  "ownKey": "lm",
                  "childrenPages": {
                    "loadablemodule": {
                      "ownKey": "loadablemodule",
                      "ownPages": [{
                        "reference": {
                          "path": "javadoc",
                          "baseUrl": "/JacquardSDKAndroid",
                          "fileName": "com/google/android/jacquard/sdk/lm/loadablemodule",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "/JacquardSDKAndroid/javadoc/com/google/android/jacquard/sdk/lm/loadablemodule"
                        },
                        "description": "",
                        "title": "LoadableModule",
                        "content": "<p>Base class for loadable modules.identifier<\/p>\n<p>LoadableModule<\/p>\n<p>getVidPidMid\nExtended class must implement this api to return loadable module skeleton.\nloadModule\nLoads IMU module.\nunloadModule\nUnloads imu module.\ninitialize\nInitializes loadable module(LM). If LM is not present on ujt, it will flash it to ujt as a dfu.\nBefore returning, this api will ensure that LM is loaded and ready for IMU sample collection.\nfetchLMDetails\nFetch loadable module details from the connected tag.\ntagSerialNumber\nReturns associated ujt serial number.\nenqueue\nEnqueue the request to send to the connected tag.\nenqueue\nEnqueue the request to send to the connected tag.\nsubscribe\nSubscribe to the specified tag notification.\ngetMyJacquardTag\nReturns the associated ConnectedJacquardTag , throws IllegalStateException if\ndisconnected.\nsetConnectionPriority\nSets the BLE connection priority.\nsetTargetUjtFirmwareVidPid\nSpecify vendor id and product id if you are looking for ujt firmware specific to your app.<\/p>\n"
                      }]
                    },
                    "initstate": {
                      "ownKey": "initstate",
                      "childrenPages": {"type": {
                        "ownKey": "type",
                        "ownPages": [{
                          "reference": {
                            "path": "javadoc",
                            "baseUrl": "/JacquardSDKAndroid",
                            "fileName": "com/google/android/jacquard/sdk/lm/initstate/type",
                            "extension": "html",
                            "usePrettyUrl": true,
                            "link": "/JacquardSDKAndroid/javadoc/com/google/android/jacquard/sdk/lm/initstate/type"
                          },
                          "description": "",
                          "title": "InitState.Type",
                          "content": "<p>List of states.INIT<\/p>\n<p>CHECK_FOR_UPDATES<\/p>\n<p>TAG_DFU<\/p>\n<p>MODULE_DFU<\/p>\n<p>ACTIVATE<\/p>\n<p>INITIALIZED<\/p>\n<p>values<\/p>\n<p>valueOf<\/p>\n"
                        }]
                      }},
                      "ownPages": [{
                        "reference": {
                          "path": "javadoc",
                          "baseUrl": "/JacquardSDKAndroid",
                          "fileName": "com/google/android/jacquard/sdk/lm/initstate",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "/JacquardSDKAndroid/javadoc/com/google/android/jacquard/sdk/lm/initstate"
                        },
                        "description": "",
                        "title": "InitState",
                        "content": "<p>States included in ImuModule init process.InitState<\/p>\n<p>init\nInit started.\ntagDfu\nTag dfu is in progress.\nmoduleDfu\nModule dfu is in progress.\ncheckForUpdates\nChecking if updates available for tag or module.\ninitialized\nImuModule is initialized.\nactivate\nActivating module.\ngetType<\/p>\n<p>isType<\/p>\n"
                      }]
                    }
                  },
                  "ownPages": [{
                    "reference": {
                      "path": "javadoc",
                      "baseUrl": "/JacquardSDKAndroid",
                      "fileName": "com/google/android/jacquard/sdk/lm",
                      "extension": "html",
                      "usePrettyUrl": true,
                      "link": "/JacquardSDKAndroid/javadoc/com/google/android/jacquard/sdk/lm"
                    },
                    "description": "",
                    "title": "com.google.android.jacquard.sdk.lm",
                    "content": "<p>LoadableModule\nBase class for loadable modules.\nInitState\nStates included in ImuModule init process.\nInitState.Type\nList of states.<\/p>\n"
                  }]
                },
                "memorycache": {
                  "ownKey": "memorycache",
                  "ownPages": [{
                    "reference": {
                      "path": "javadoc",
                      "baseUrl": "/JacquardSDKAndroid",
                      "fileName": "com/google/android/jacquard/sdk/memorycache",
                      "extension": "html",
                      "usePrettyUrl": true,
                      "link": "/JacquardSDKAndroid/javadoc/com/google/android/jacquard/sdk/memorycache"
                    },
                    "description": "",
                    "title": "MemoryCache",
                    "content": "<p>getDeviceInfo\nReturns the device info if present in the memory.\nputDeviceInfo\nSave the DeviceInfo in the memory.<\/p>\n"
                  }]
                },
                "log": {
                  "ownKey": "log",
                  "childrenPages": {
                    "loglevel": {
                      "ownKey": "loglevel",
                      "ownPages": [{
                        "reference": {
                          "path": "javadoc",
                          "baseUrl": "/JacquardSDKAndroid",
                          "fileName": "com/google/android/jacquard/sdk/log/loglevel",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "/JacquardSDKAndroid/javadoc/com/google/android/jacquard/sdk/log/loglevel"
                        },
                        "description": "",
                        "title": "LogLevel",
                        "content": "<p>A set of log levels to print a log message to the console.VERBOSE<\/p>\n<p>DEBUG<\/p>\n<p>INFO<\/p>\n<p>WARNING<\/p>\n<p>ERROR<\/p>\n<p>ASSERT<\/p>\n<p>values<\/p>\n<p>valueOf<\/p>\n<p>getLogLevel\nReturns priority log level.<\/p>\n"
                      }]
                    },
                    "logger": {
                      "ownKey": "logger",
                      "ownPages": [{
                        "reference": {
                          "path": "javadoc",
                          "baseUrl": "/JacquardSDKAndroid",
                          "fileName": "com/google/android/jacquard/sdk/log/logger",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "/JacquardSDKAndroid/javadoc/com/google/android/jacquard/sdk/log/logger"
                        },
                        "description": "",
                        "title": "Logger",
                        "content": "<p>An interface describes the type you must implement if you wish to provide your own logging\nimplementation.v\nLogs a LogLevel message.\nv\nLogs a LogLevel message.\nd\nLogs a LogLevel message.\nd\nLogs a LogLevel message.\ni\nLogs a LogLevel message.\ni\nLogs a LogLevel log message.\nw\nLogs a LogLevel message.\nw\nLogs a LogLevel message.\ne\nLogs a LogLevel message.\ne\nLogs a LogLevel message.\nlog\nLogs a message with log level.\ngetLogFile\nReturns a log file with log details.\naddToIgnoreList\nIgnores (does not print) the logs containing provided ignoreText.<\/p>\n"
                      }]
                    },
                    "printlogger": {
                      "ownKey": "printlogger",
                      "ownPages": [{
                        "reference": {
                          "path": "javadoc",
                          "baseUrl": "/JacquardSDKAndroid",
                          "fileName": "com/google/android/jacquard/sdk/log/printlogger",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "/JacquardSDKAndroid/javadoc/com/google/android/jacquard/sdk/log/printlogger"
                        },
                        "description": "",
                        "title": "PrintLogger",
                        "content": "<p>A class which configures logger to print a log message to the console.PrintLogger<\/p>\n<p>setGlobalJacquardSDKLogger\nSets the global Logger instance used by all code in Jacquard SDK.<\/p>\n <p>\n You do not need to set this - the default logger prints log messages to the console using Log#println(int, String, String) , ignoring LogLevel  LogLevel . You can also set a default logger with log level which you desire, or you may\n implement your own custom Logger type.\ninitialize\nInitializes a default logger Logger with a log level which you desire.\n <p>\n You can also use PrintLogger with a default log levels.\ninitialize\nInitializes a default logger with a log level LogLevel , LogLevel , LogLevel , LogLevel .\n <p>\n You can also set a log level which you desire PrintLogger .\nignore\nIgnores the logs containing the provided text.\nv\nSends a LogLevel log message.\nv\nSends a LogLevel log message.\nd\nSends a LogLevel log message.\nd\nSends a LogLevel log message.\ni\nSends a LogLevel log message.\ni\nSends a LogLevel log message.\nw\nSends a LogLevel log message.\nw\nSends a LogLevel log message.\ne\nSends a LogLevel log message.\ne\nSends a LogLevel log message.\nlog\nSends a log message.\ngetLogFile\nReturns a log file.\n"
                      }]
                    }
                  },
                  "ownPages": [{
                    "reference": {
                      "path": "javadoc",
                      "baseUrl": "/JacquardSDKAndroid",
                      "fileName": "com/google/android/jacquard/sdk/log",
                      "extension": "html",
                      "usePrettyUrl": true,
                      "link": "/JacquardSDKAndroid/javadoc/com/google/android/jacquard/sdk/log"
                    },
                    "description": "",
                    "title": "com.google.android.jacquard.sdk.log",
                    "content": "<p>PrintLogger\nA class which configures logger to print a log message to the console.\nLogLevel\nA set of log levels to print a log message to the console.\nLogger\nAn interface describes the type you must implement if you wish to provide your own logging\nimplementation.<\/p>\n"
                  }]
                },
                "sdkinitprovider": {
                  "ownKey": "sdkinitprovider",
                  "ownPages": [{
                    "reference": {
                      "path": "javadoc",
                      "baseUrl": "/JacquardSDKAndroid",
                      "fileName": "com/google/android/jacquard/sdk/sdkinitprovider",
                      "extension": "html",
                      "usePrettyUrl": true,
                      "link": "/JacquardSDKAndroid/javadoc/com/google/android/jacquard/sdk/sdkinitprovider"
                    },
                    "description": "",
                    "title": "SdkInitProvider",
                    "content": "<p>ContentsProviders are initialized and called directly after the application\u2019s object is created.\nThis class creates an instance of JacquardManagerImpl and makes sure that it is\naccessible via JacquardManager when the application is launched.SdkInitProvider<\/p>\n<p>onCreate<\/p>\n<p>query<\/p>\n<p>getType<\/p>\n<p>insert<\/p>\n<p>delete<\/p>\n<p>update<\/p>\n"
                  }]
                },
                "datastore": {
                  "ownKey": "datastore",
                  "childrenPages": {
                    "componentmetadata": {
                      "ownKey": "componentmetadata",
                      "ownPages": [{
                        "reference": {
                          "path": "javadoc",
                          "baseUrl": "/JacquardSDKAndroid",
                          "fileName": "com/google/android/jacquard/sdk/datastore/componentmetadata",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "/JacquardSDKAndroid/javadoc/com/google/android/jacquard/sdk/datastore/componentmetadata"
                        },
                        "description": "",
                        "title": "ComponentMetaData",
                        "content": "<p>Requires for parsing the data loaded from cloud json.ComponentMetaData<\/p>\n<p>vendors\nReturns Map of Vendors with its id as Map key.\nof\nCreator method for ComponentMetaData .<\/p>\n"
                      }]
                    },
                    "dataprovider": {
                      "ownKey": "dataprovider",
                      "ownPages": [{
                        "reference": {
                          "path": "javadoc",
                          "baseUrl": "/JacquardSDKAndroid",
                          "fileName": "com/google/android/jacquard/sdk/datastore/dataprovider",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "/JacquardSDKAndroid/javadoc/com/google/android/jacquard/sdk/datastore/dataprovider"
                        },
                        "description": "",
                        "title": "DataProvider",
                        "content": "<p>Stores and provides all meta data from cloud jsongetDataProvider\nReturns existing instance of DataProvider .<br/> Do not forget to call DataProvider before calling this api.\ncreate\nCreates an Object of DataProvider with all the data.\ngetGearComponent\nReturns the gear Component object correspond to vendorId, productId.\ngetTagComponent\nReturns the tag Component object.<\/p>\n"
                      }]
                    }
                  },
                  "ownPages": [{
                    "reference": {
                      "path": "javadoc",
                      "baseUrl": "/JacquardSDKAndroid",
                      "fileName": "com/google/android/jacquard/sdk/datastore",
                      "extension": "html",
                      "usePrettyUrl": true,
                      "link": "/JacquardSDKAndroid/javadoc/com/google/android/jacquard/sdk/datastore"
                    },
                    "description": "",
                    "title": "com.google.android.jacquard.sdk.datastore",
                    "content": "<p>ComponentMetaData\nRequires for parsing the data loaded from cloud json.\nDataProvider\nStores and provides all meta data from cloud json<\/p>\n"
                  }]
                },
                "rx": {
                  "ownKey": "rx",
                  "childrenPages": {
                    "pred": {
                      "ownKey": "pred",
                      "ownPages": [{
                        "reference": {
                          "path": "javadoc",
                          "baseUrl": "/JacquardSDKAndroid",
                          "fileName": "com/google/android/jacquard/sdk/rx/pred",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "/JacquardSDKAndroid/javadoc/com/google/android/jacquard/sdk/rx/pred"
                        },
                        "description": "",
                        "title": "Pred",
                        "content": "<p>apply<\/p>\n"
                      }]
                    },
                    "fn": {
                      "ownKey": "fn",
                      "ownPages": [{
                        "reference": {
                          "path": "javadoc",
                          "baseUrl": "/JacquardSDKAndroid",
                          "fileName": "com/google/android/jacquard/sdk/rx/fn",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "/JacquardSDKAndroid/javadoc/com/google/android/jacquard/sdk/rx/fn"
                        },
                        "description": "",
                        "title": "Fn",
                        "content": "<p>apply<\/p>\n"
                      }]
                    },
                    "executors": {
                      "ownKey": "executors",
                      "ownPages": [{
                        "reference": {
                          "path": "javadoc",
                          "baseUrl": "/JacquardSDKAndroid",
                          "fileName": "com/google/android/jacquard/sdk/rx/executors",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "/JacquardSDKAndroid/javadoc/com/google/android/jacquard/sdk/rx/executors"
                        },
                        "description": "",
                        "title": "Executors",
                        "content": "<p>Provides executors for signal operators.mainThreadExecutor\nPosts executions to the main thread.\ndirectExecutor\nImmediately calls Runnable on the current thread.<\/p>\n"
                      }]
                    },
                    "producer": {
                      "ownKey": "producer",
                      "ownPages": [{
                        "reference": {
                          "path": "javadoc",
                          "baseUrl": "/JacquardSDKAndroid",
                          "fileName": "com/google/android/jacquard/sdk/rx/producer",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "/JacquardSDKAndroid/javadoc/com/google/android/jacquard/sdk/rx/producer"
                        },
                        "description": "",
                        "title": "Producer",
                        "content": "<p>A producer function, generating a <code>T<\/code>.apply<\/p>\n"
                      }]
                    },
                    "fn2": {
                      "ownKey": "fn2",
                      "ownPages": [{
                        "reference": {
                          "path": "javadoc",
                          "baseUrl": "/JacquardSDKAndroid",
                          "fileName": "com/google/android/jacquard/sdk/rx/fn2",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "/JacquardSDKAndroid/javadoc/com/google/android/jacquard/sdk/rx/fn2"
                        },
                        "description": "",
                        "title": "Fn2",
                        "content": "<p>apply<\/p>\n"
                      }]
                    },
                    "signal": {
                      "ownKey": "signal",
                      "childrenPages": {
                        "observer": {
                          "ownKey": "observer",
                          "ownPages": [{
                            "reference": {
                              "path": "javadoc",
                              "baseUrl": "/JacquardSDKAndroid",
                              "fileName": "com/google/android/jacquard/sdk/rx/signal/observer",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "/JacquardSDKAndroid/javadoc/com/google/android/jacquard/sdk/rx/signal/observer"
                            },
                            "description": "",
                            "title": "Signal.Observer",
                            "content": "<p>onNext<\/p>\n<p>onError<\/p>\n<p>onComplete<\/p>\n"
                          }]
                        },
                        "observeserror": {
                          "ownKey": "observeserror",
                          "ownPages": [{
                            "reference": {
                              "path": "javadoc",
                              "baseUrl": "/JacquardSDKAndroid",
                              "fileName": "com/google/android/jacquard/sdk/rx/signal/observeserror",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "/JacquardSDKAndroid/javadoc/com/google/android/jacquard/sdk/rx/signal/observeserror"
                            },
                            "description": "",
                            "title": "Signal.ObservesError",
                            "content": "<p>Class to observe only errors in subscription.ObservesError<\/p>\n<p>onNext<\/p>\n<p>onComplete<\/p>\n"
                          }]
                        },
                        "observescomplete": {
                          "ownKey": "observescomplete",
                          "ownPages": [{
                            "reference": {
                              "path": "javadoc",
                              "baseUrl": "/JacquardSDKAndroid",
                              "fileName": "com/google/android/jacquard/sdk/rx/signal/observescomplete",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "/JacquardSDKAndroid/javadoc/com/google/android/jacquard/sdk/rx/signal/observescomplete"
                            },
                            "description": "",
                            "title": "Signal.ObservesComplete",
                            "content": "<p>Class to observe only complete block in subscription.ObservesComplete<\/p>\n<p>onNext<\/p>\n<p>onError<\/p>\n"
                          }]
                        },
                        "forwarderobserver": {
                          "ownKey": "forwarderobserver",
                          "ownPages": [{
                            "reference": {
                              "path": "javadoc",
                              "baseUrl": "/JacquardSDKAndroid",
                              "fileName": "com/google/android/jacquard/sdk/rx/signal/forwarderobserver",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "/JacquardSDKAndroid/javadoc/com/google/android/jacquard/sdk/rx/signal/forwarderobserver"
                            },
                            "description": "",
                            "title": "Signal.ForwarderObserver",
                            "content": "<p>ForwarderObserver<\/p>\n<p>onNext<\/p>\n<p>onError<\/p>\n<p>onComplete<\/p>\n"
                          }]
                        },
                        "subscription": {
                          "ownKey": "subscription",
                          "ownPages": [{
                            "reference": {
                              "path": "javadoc",
                              "baseUrl": "/JacquardSDKAndroid",
                              "fileName": "com/google/android/jacquard/sdk/rx/signal/subscription",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "/JacquardSDKAndroid/javadoc/com/google/android/jacquard/sdk/rx/signal/subscription"
                            },
                            "description": "",
                            "title": "Signal.Subscription",
                            "content": "<p>Subscription<\/p>\n<p>onUnsubscribe\nSubclasses should override for custom behavior\nunsubscribe<\/p>\n"
                          }]
                        },
                        "onsubscribe": {
                          "ownKey": "onsubscribe",
                          "ownPages": [{
                            "reference": {
                              "path": "javadoc",
                              "baseUrl": "/JacquardSDKAndroid",
                              "fileName": "com/google/android/jacquard/sdk/rx/signal/onsubscribe",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "/JacquardSDKAndroid/javadoc/com/google/android/jacquard/sdk/rx/signal/onsubscribe"
                            },
                            "description": "",
                            "title": "Signal.OnSubscribe",
                            "content": "<p>onSubscribe<\/p>\n"
                          }]
                        },
                        "observesnext": {
                          "ownKey": "observesnext",
                          "ownPages": [{
                            "reference": {
                              "path": "javadoc",
                              "baseUrl": "/JacquardSDKAndroid",
                              "fileName": "com/google/android/jacquard/sdk/rx/signal/observesnext",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "/JacquardSDKAndroid/javadoc/com/google/android/jacquard/sdk/rx/signal/observesnext"
                            },
                            "description": "",
                            "title": "Signal.ObservesNext",
                            "content": "<p>ObservesNext<\/p>\n<p>onError<\/p>\n<p>onComplete<\/p>\n"
                          }]
                        },
                        "subscriptionfactory": {
                          "ownKey": "subscriptionfactory",
                          "ownPages": [{
                            "reference": {
                              "path": "javadoc",
                              "baseUrl": "/JacquardSDKAndroid",
                              "fileName": "com/google/android/jacquard/sdk/rx/signal/subscriptionfactory",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "/JacquardSDKAndroid/javadoc/com/google/android/jacquard/sdk/rx/signal/subscriptionfactory"
                            },
                            "description": "",
                            "title": "Signal.SubscriptionFactory",
                            "content": "<p>onSubscribe<\/p>\n"
                          }]
                        }
                      },
                      "ownPages": [{
                        "reference": {
                          "path": "javadoc",
                          "baseUrl": "/JacquardSDKAndroid",
                          "fileName": "com/google/android/jacquard/sdk/rx/signal",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "/JacquardSDKAndroid/javadoc/com/google/android/jacquard/sdk/rx/signal"
                        },
                        "description": "",
                        "title": "Signal",
                        "content": "<p>A naive reimplementation of rxjava's Observable&lt;T&gt;<\/p>\n <p>Produces an observable stream of T. All operations are single-threaded, but should otherwise\n be thread-safe.create\nSignal factory method\ncreate\nsignal factory method\nempty\nempty signal factory\nempty\nerrored signal factory\nfrom\ncreate Signal[T] from Iterable[T]\nfrom\ncreate Signal[T] from a T\njust\ncreate Signal[T] from a T (alias to allow Collections)\nmerge\ncombine multiple signals of the same type into one\nmerge\nmerge a list of signals of the same type into one\nhasObservers\n\nerror\nerror out this signal\nnext\nprovide a new value to this signal\nhasError\n\nisComplete\n\ncomplete\nmark this signal as being completed\nmap\ntransform Signal[T] to Signal[U] using T -> U\nflatMap\ntransform Signal[T] to Signal[U] using T -> Signal[U]\nswitchMap\ntransform Signal[T] to Signal[U] using T -> Signal[U] and complete previous inner observable\n before emitting.\nfilter\nremove elements from this Signal that do not match the predicate\ntakeWhile\nretrieve the beginning of this signal while the predicate is true\ntake\nretrieve the first count items from this signal\nfirst\nretrieve the first element of this signal\ndrop\nignore the first count items from this signal\ndropWhile\nignore the first items of this signal while the predicate holds\ndistinct\n\ndistinctUntilChanged\n\nsticky\n\nlast\nretrieve the last item of this signal\nscan\ncollate this signal into an accumulator\nshared\nshare any previous operations across subsequent observers\ntimeout\ntimeout this signal after timeoms milliseconds\ntimeout\ntimeout this signal after timeoms milliseconds\nrecoverWith\nRecovers this Signal if it encounters an error by returning a new Signal.\n\n <p>The exception can be inspected to either return a new signal, or another error if it\n should not be handled.\ndelay\ndelay all outputs from this signal by\n\n <p>delayms\ncountDownTimer\nSchedule a countdown until a time in the future, with regular notifications on intervals along\n the way.\ntapError\nForwards errors to the designated callback without causing subscribe side-effects\nforward\nForwards all events from this Signal to the target signal\ntap\nForwards all next values to the specified consumer for a side-effecting operation.\ntapCompletion\nForwards completion to the specified consumer for a side-effecting operation.\nobserveOn\nExecutes downstream operators on the provided Executor .\nonNext\n\nonComplete\n\nonError\n\nonTerminate\nSubscribes to onError and onComplete of this signal.\n\n <p><code>consumer<\/code> will be called with a <code>null<\/code> Throwable if this\n has completed successfully, if there is an error, it will be non-<code>null<\/code>.\nobserve\nObserves this signal using the specified <code>onNext<\/code> and <code>onTerminate<\/code>.\nobserve\nobserve events on this signal, unsubscribe the Subscription to stop observing\nconsume\nconvenience method to observe all values on this Signal and ignore them, causes side-effects to\n run.\n"
                      }]
                    },
                    "consumer": {
                      "ownKey": "consumer",
                      "ownPages": [{
                        "reference": {
                          "path": "javadoc",
                          "baseUrl": "/JacquardSDKAndroid",
                          "fileName": "com/google/android/jacquard/sdk/rx/consumer",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "/JacquardSDKAndroid/javadoc/com/google/android/jacquard/sdk/rx/consumer"
                        },
                        "description": "",
                        "title": "Consumer",
                        "content": "<p>A representation of <code>T -&gt; ()<\/code>apply<\/p>\n"
                      }]
                    }
                  },
                  "ownPages": [{
                    "reference": {
                      "path": "javadoc",
                      "baseUrl": "/JacquardSDKAndroid",
                      "fileName": "com/google/android/jacquard/sdk/rx",
                      "extension": "html",
                      "usePrettyUrl": true,
                      "link": "/JacquardSDKAndroid/javadoc/com/google/android/jacquard/sdk/rx"
                    },
                    "description": "",
                    "title": "com.google.android.jacquard.sdk.rx",
                    "content": "<p>Signal\nA naive reimplementation of rxjava's Observable&lt;T&gt;<\/p>\n <p>Produces an observable stream of T. All operations are single-threaded, but should otherwise\n be thread-safe.\nSignal.SubscriptionFactory\n\nSignal.Observer\n\nSignal.OnSubscribe\n\nSignal.Subscription\n\nSignal.ObservesNext\n\nSignal.ObservesComplete\nClass to observe only complete block in subscription.\nSignal.ObservesError\nClass to observe only errors in subscription.\nSignal.ForwarderObserver\n\nPred\n\nExecutors\nProvides executors for signal operators.\nFn\n\nProducer\nA producer function, generating a <code>T<\/code>.\nConsumer\nA representation of <code>T -&gt; ()<\/code>\nFn2\n\n"
                  }]
                },
                "connectstate": {
                  "ownKey": "connectstate",
                  "childrenPages": {"type": {
                    "ownKey": "type",
                    "ownPages": [{
                      "reference": {
                        "path": "javadoc",
                        "baseUrl": "/JacquardSDKAndroid",
                        "fileName": "com/google/android/jacquard/sdk/connectstate/type",
                        "extension": "html",
                        "usePrettyUrl": true,
                        "link": "/JacquardSDKAndroid/javadoc/com/google/android/jacquard/sdk/connectstate/type"
                      },
                      "description": "",
                      "title": "ConnectState.Type",
                      "content": "<p>CONNECTED<\/p>\n<p>FAILED_TO_CONNECT<\/p>\n<p>DISCONNECTED<\/p>\n<p>SERVICES_DISCOVERED<\/p>\n<p>CHARACTERISTIC_UPDATED<\/p>\n<p>VALUE_WRITTEN<\/p>\n<p>VALUE_RSSI<\/p>\n<p>values<\/p>\n<p>valueOf<\/p>\n"
                    }]
                  }},
                  "ownPages": [{
                    "reference": {
                      "path": "javadoc",
                      "baseUrl": "/JacquardSDKAndroid",
                      "fileName": "com/google/android/jacquard/sdk/connectstate",
                      "extension": "html",
                      "usePrettyUrl": true,
                      "link": "/JacquardSDKAndroid/javadoc/com/google/android/jacquard/sdk/connectstate"
                    },
                    "description": "",
                    "title": "ConnectState",
                    "content": "<p>Data class holding the different state the bluetooth connection can be in.ConnectState<\/p>\n<p>isType<\/p>\n<p>getType\nReturn the type associated with this class.\nconnected\nReturns a Peripheral from the connection.\nfailedToConnect\nReturns a FailedToConnect error.\ndisconnected\nReturns a FailedToConnect error.\nservicesDiscovered\nReturns a ServicesDiscovered .\ncharacteristicUpdated\nReturns a CharacteristicUpdate .\nvalueWritten\nReturns a CharacteristicUpdate .\nvalueRssi\nReturns a RssiUpdate .<\/p>\n"
                  }]
                },
                "blequeue": {
                  "ownKey": "blequeue",
                  "childrenPages": {"command": {
                    "ownKey": "command",
                    "childrenPages": {"type": {
                      "ownKey": "type",
                      "ownPages": [{
                        "reference": {
                          "path": "javadoc",
                          "baseUrl": "/JacquardSDKAndroid",
                          "fileName": "com/google/android/jacquard/sdk/blequeue/command/type",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "/JacquardSDKAndroid/javadoc/com/google/android/jacquard/sdk/blequeue/command/type"
                        },
                        "description": "",
                        "title": "BleQueue.Command.Type",
                        "content": "<p>The type of BLE command requested. This is used to make sure the requests/responses are in\nsync.READ_CHARACTERISTIC<\/p>\n<p>WRITE_CHARACTERISTIC<\/p>\n<p>WRITE_DESCRIPTOR<\/p>\n<p>DISCOVER_SERVICES<\/p>\n<p>values<\/p>\n<p>valueOf<\/p>\n"
                      }]
                    }},
                    "ownPages": [{
                      "reference": {
                        "path": "javadoc",
                        "baseUrl": "/JacquardSDKAndroid",
                        "fileName": "com/google/android/jacquard/sdk/blequeue/command",
                        "extension": "html",
                        "usePrettyUrl": true,
                        "link": "/JacquardSDKAndroid/javadoc/com/google/android/jacquard/sdk/blequeue/command"
                      },
                      "description": "",
                      "title": "BleQueue.Command",
                      "content": "<p>Command class wrapping a runnable BLE command.type\nThe type of command.\nCommand\nCreates new instance of Command with a type\ntoString<\/p>\n"
                    }]
                  }},
                  "ownPages": [{
                    "reference": {
                      "path": "javadoc",
                      "baseUrl": "/JacquardSDKAndroid",
                      "fileName": "com/google/android/jacquard/sdk/blequeue",
                      "extension": "html",
                      "usePrettyUrl": true,
                      "link": "/JacquardSDKAndroid/javadoc/com/google/android/jacquard/sdk/blequeue"
                    },
                    "description": "",
                    "title": "BleQueue",
                    "content": "<p>Queue for executing BLE commands synchronously.BleQueue<\/p>\n<p>enqueue\nEnqueues a Command for execution.\ncompletedCommand\nRemoves a pending Command from the queue and executes the next<\/p>\n"
                  }]
                },
                "remote": {
                  "ownKey": "remote",
                  "childrenPages": {
                    "metadatamodel": {
                      "ownKey": "metadatamodel",
                      "ownPages": [{
                        "reference": {
                          "path": "javadoc",
                          "baseUrl": "/JacquardSDKAndroid",
                          "fileName": "com/google/android/jacquard/sdk/remote/metadatamodel",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "/JacquardSDKAndroid/javadoc/com/google/android/jacquard/sdk/remote/metadatamodel"
                        },
                        "description": "",
                        "title": "MetaDataModel",
                        "content": "<p>Class to parse meta data of the component from json.MetaDataModel<\/p>\n<p>vendors\nList of all the Vendors.<\/p>\n"
                      }]
                    },
                    "remotefunction": {
                      "ownKey": "remotefunction",
                      "ownPages": [{
                        "reference": {
                          "path": "javadoc",
                          "baseUrl": "/JacquardSDKAndroid",
                          "fileName": "com/google/android/jacquard/sdk/remote/remotefunction",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "/JacquardSDKAndroid/javadoc/com/google/android/jacquard/sdk/remote/remotefunction"
                        },
                        "description": "",
                        "title": "RemoteFunction",
                        "content": "<p>Marker Interface for Remote related classes.getComponents\nGets component meta data.\ngetBadFirmwareVersions\nBad firmware versions meta data<\/p>\n"
                      }]
                    },
                    "remotefactory": {
                      "ownKey": "remotefactory",
                      "ownPages": [{
                        "reference": {
                          "path": "javadoc",
                          "baseUrl": "/JacquardSDKAndroid",
                          "fileName": "com/google/android/jacquard/sdk/remote/remotefactory",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "/JacquardSDKAndroid/javadoc/com/google/android/jacquard/sdk/remote/remotefactory"
                        },
                        "description": "",
                        "title": "RemoteFactory",
                        "content": "<p>Provides implementation of RemoteFunctionRemoteFactory<\/p>\n<p>initialize<\/p>\n<p>remoteInstance\nReturns Implmentation of RemoteFunction based on Type of service.\ncreateDataProvider<\/p>\n"
                      }]
                    }
                  },
                  "ownPages": [{
                    "reference": {
                      "path": "javadoc",
                      "baseUrl": "/JacquardSDKAndroid",
                      "fileName": "com/google/android/jacquard/sdk/remote",
                      "extension": "html",
                      "usePrettyUrl": true,
                      "link": "/JacquardSDKAndroid/javadoc/com/google/android/jacquard/sdk/remote"
                    },
                    "description": "",
                    "title": "com.google.android.jacquard.sdk.remote",
                    "content": "<p>MetaDataModel\nClass to parse meta data of the component from json.\nRemoteFunction\nMarker Interface for Remote related classes.\nRemoteFactory\nProvides implementation of RemoteFunction<\/p>\n"
                  }]
                },
                "command": {
                  "ownKey": "command",
                  "childrenPages": {
                    "dcerrornotificationsubscription": {
                      "ownKey": "dcerrornotificationsubscription",
                      "ownPages": [{
                        "reference": {
                          "path": "javadoc",
                          "baseUrl": "/JacquardSDKAndroid",
                          "fileName": "com/google/android/jacquard/sdk/command/dcerrornotificationsubscription",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "/JacquardSDKAndroid/javadoc/com/google/android/jacquard/sdk/command/dcerrornotificationsubscription"
                        },
                        "description": "",
                        "title": "DCErrorNotificationSubscription",
                        "content": "<p>Error notification subscription.DCErrorNotificationSubscription<\/p>\n<p>extract<\/p>\n"
                      }]
                    },
                    "gesturenotificationsubscription": {
                      "ownKey": "gesturenotificationsubscription",
                      "ownPages": [{
                        "reference": {
                          "path": "javadoc",
                          "baseUrl": "/JacquardSDKAndroid",
                          "fileName": "com/google/android/jacquard/sdk/command/gesturenotificationsubscription",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "/JacquardSDKAndroid/javadoc/com/google/android/jacquard/sdk/command/gesturenotificationsubscription"
                        },
                        "description": "",
                        "title": "GestureNotificationSubscription",
                        "content": "<p>Use to subscribe to gesture notifications from the tag.<\/p>\n <p>When a gesture is performed on the gear a Gesture will be emitted from ConnectedJacquardTagGestureNotificationSubscription\n\nextract\n\n"
                      }]
                    },
                    "notificationsubscription": {
                      "ownKey": "notificationsubscription",
                      "ownPages": [{
                        "reference": {
                          "path": "javadoc",
                          "baseUrl": "/JacquardSDKAndroid",
                          "fileName": "com/google/android/jacquard/sdk/command/notificationsubscription",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "/JacquardSDKAndroid/javadoc/com/google/android/jacquard/sdk/command/notificationsubscription"
                        },
                        "description": "",
                        "title": "NotificationSubscription",
                        "content": "<p>Interface for subscribing to notifications from the tag.extract\nExtracts the payload from the notification. Returns null if the notification is not the\nexpected notification.<\/p>\n"
                      }]
                    },
                    "setconfigcommand": {
                      "ownKey": "setconfigcommand",
                      "childrenPages": {"settingstype": {
                        "ownKey": "settingstype",
                        "ownPages": [{
                          "reference": {
                            "path": "javadoc",
                            "baseUrl": "/JacquardSDKAndroid",
                            "fileName": "com/google/android/jacquard/sdk/command/setconfigcommand/settingstype",
                            "extension": "html",
                            "usePrettyUrl": true,
                            "link": "/JacquardSDKAndroid/javadoc/com/google/android/jacquard/sdk/command/setconfigcommand/settingstype"
                          },
                          "description": "",
                          "title": "SetConfigCommand.SettingsType",
                          "content": "<p>Data types for tag config values.BOOL<\/p>\n<p>UINT32<\/p>\n<p>UINT64<\/p>\n<p>INT32<\/p>\n<p>INT64<\/p>\n<p>FLOAT<\/p>\n<p>DOUBLE<\/p>\n<p>STRING<\/p>\n<p>values<\/p>\n<p>valueOf<\/p>\n"
                        }]
                      }},
                      "ownPages": [{
                        "reference": {
                          "path": "javadoc",
                          "baseUrl": "/JacquardSDKAndroid",
                          "fileName": "com/google/android/jacquard/sdk/command/setconfigcommand",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "/JacquardSDKAndroid/javadoc/com/google/android/jacquard/sdk/command/setconfigcommand"
                        },
                        "description": "",
                        "title": "SetConfigCommand",
                        "content": "<p>Writes Key-Value pair to tag.SetConfigCommand<\/p>\n<p>parseResponse\nParses the raw response received from the tag into a Result object.\ngetRequest\nReturns the request to be sent to the tag.<\/p>\n"
                      }]
                    },
                    "eraseimusessioncommand": {
                      "ownKey": "eraseimusessioncommand",
                      "ownPages": [{
                        "reference": {
                          "path": "javadoc",
                          "baseUrl": "/JacquardSDKAndroid",
                          "fileName": "com/google/android/jacquard/sdk/command/eraseimusessioncommand",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "/JacquardSDKAndroid/javadoc/com/google/android/jacquard/sdk/command/eraseimusessioncommand"
                        },
                        "description": "",
                        "title": "EraseImuSessionCommand",
                        "content": "<p>Ujt command to erase specific or all IMU Sessions.EraseImuSessionCommand<\/p>\n<p>parseResponse<\/p>\n<p>getRequest<\/p>\n"
                      }]
                    },
                    "continuoustouchnotificationsubscription": {
                      "ownKey": "continuoustouchnotificationsubscription",
                      "ownPages": [{
                        "reference": {
                          "path": "javadoc",
                          "baseUrl": "/JacquardSDKAndroid",
                          "fileName": "com/google/android/jacquard/sdk/command/continuoustouchnotificationsubscription",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "/JacquardSDKAndroid/javadoc/com/google/android/jacquard/sdk/command/continuoustouchnotificationsubscription"
                        },
                        "description": "",
                        "title": "ContinuousTouchNotificationSubscription",
                        "content": "<p>Use to subscribe to continuous touch data from the tag.<\/p>\n <p>When a the gear is touch TouchData will be emitted from ConnectedJacquardTagContinuousTouchNotificationSubscription\n\nextract\n\n"
                      }]
                    },
                    "ujtreadconfigcommand": {
                      "ownKey": "ujtreadconfigcommand",
                      "ownPages": [{
                        "reference": {
                          "path": "javadoc",
                          "baseUrl": "/JacquardSDKAndroid",
                          "fileName": "com/google/android/jacquard/sdk/command/ujtreadconfigcommand",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "/JacquardSDKAndroid/javadoc/com/google/android/jacquard/sdk/command/ujtreadconfigcommand"
                        },
                        "description": "",
                        "title": "UjtReadConfigCommand",
                        "content": "<p>Command to read BleConfiguration from ConnectedJacquardTag .UjtReadConfigCommand<\/p>\n<p>getExtension<\/p>\n<p>parseResponse<\/p>\n<p>getRequest<\/p>\n"
                      }]
                    },
                    "unloadmodulecommand": {
                      "ownKey": "unloadmodulecommand",
                      "ownPages": [{
                        "reference": {
                          "path": "javadoc",
                          "baseUrl": "/JacquardSDKAndroid",
                          "fileName": "com/google/android/jacquard/sdk/command/unloadmodulecommand",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "/JacquardSDKAndroid/javadoc/com/google/android/jacquard/sdk/command/unloadmodulecommand"
                        },
                        "description": "",
                        "title": "UnloadModuleCommand",
                        "content": "<p>Ujt command to unload/deactivate the loadable module.UnloadModuleCommand<\/p>\n<p>parseResponse<\/p>\n<p>getRequest<\/p>\n"
                      }]
                    },
                    "startimustreamingcommand": {
                      "ownKey": "startimustreamingcommand",
                      "ownPages": [{
                        "reference": {
                          "path": "javadoc",
                          "baseUrl": "/JacquardSDKAndroid",
                          "fileName": "com/google/android/jacquard/sdk/command/startimustreamingcommand",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "/JacquardSDKAndroid/javadoc/com/google/android/jacquard/sdk/command/startimustreamingcommand"
                        },
                        "description": "",
                        "title": "StartImuStreamingCommand",
                        "content": "<p>UJT command to start Imu samples streaming. <\/br> Observe ConnectedJacquardTag to receive ImuStream .StartImuStreamingCommand\nInitializes the command.\nparseResponse<\/p>\n<p>excludeResponseErrorChecks<\/p>\n<p>getRequest<\/p>\n"
                      }]
                    },
                    "ujtwriteconfigcommand": {
                      "ownKey": "ujtwriteconfigcommand",
                      "ownPages": [{
                        "reference": {
                          "path": "javadoc",
                          "baseUrl": "/JacquardSDKAndroid",
                          "fileName": "com/google/android/jacquard/sdk/command/ujtwriteconfigcommand",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "/JacquardSDKAndroid/javadoc/com/google/android/jacquard/sdk/command/ujtwriteconfigcommand"
                        },
                        "description": "",
                        "title": "UjtWriteConfigCommand",
                        "content": "<p>Command for writing BleConfiguration to the tag.<\/p>\n <p>\n A command can be send to a connected tag via ConnectedJacquardTagUjtWriteConfigCommand\nCreates a new instance of UjtWriteConfigCommand and when executed will apply the provided BleConfiguration to the tag.\nUjtWriteConfigCommand\n\nUjtWriteConfigCommand\nCreates a new instance of UjtWriteConfigCommand and when executed will apply the provided BleConfiguration to the tag.\nparseResponse\n\ngetRequest\n\n"
                      }]
                    },
                    "loadmodulenotificationsubscription": {
                      "ownKey": "loadmodulenotificationsubscription",
                      "ownPages": [{
                        "reference": {
                          "path": "javadoc",
                          "baseUrl": "/JacquardSDKAndroid",
                          "fileName": "com/google/android/jacquard/sdk/command/loadmodulenotificationsubscription",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "/JacquardSDKAndroid/javadoc/com/google/android/jacquard/sdk/command/loadmodulenotificationsubscription"
                        },
                        "description": "",
                        "title": "LoadModuleNotificationSubscription",
                        "content": "<p>This subscription class gives you a ability to get subscribed to load module notifications.LoadModuleNotificationSubscription<\/p>\n<p>extract<\/p>\n"
                      }]
                    },
                    "listmodulescommand": {
                      "ownKey": "listmodulescommand",
                      "ownPages": [{
                        "reference": {
                          "path": "javadoc",
                          "baseUrl": "/JacquardSDKAndroid",
                          "fileName": "com/google/android/jacquard/sdk/command/listmodulescommand",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "/JacquardSDKAndroid/javadoc/com/google/android/jacquard/sdk/command/listmodulescommand"
                        },
                        "description": "",
                        "title": "ListModulesCommand",
                        "content": "<p>Ujt command to fetch all Module present.ListModulesCommand<\/p>\n<p>getExtension<\/p>\n<p>parseResponse<\/p>\n<p>getRequest<\/p>\n"
                      }]
                    },
                    "stopimusessioncommand": {
                      "ownKey": "stopimusessioncommand",
                      "ownPages": [{
                        "reference": {
                          "path": "javadoc",
                          "baseUrl": "/JacquardSDKAndroid",
                          "fileName": "com/google/android/jacquard/sdk/command/stopimusessioncommand",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "/JacquardSDKAndroid/javadoc/com/google/android/jacquard/sdk/command/stopimusessioncommand"
                        },
                        "description": "",
                        "title": "StopImuSessionCommand",
                        "content": "<p>Ujt command to stop IMU Session.StopImuSessionCommand<\/p>\n<p>getExtension<\/p>\n<p>parseResponse<\/p>\n<p>excludeResponseErrorChecks<\/p>\n<p>getRequest<\/p>\n"
                      }]
                    },
                    "innerdcerrornotificationsubscription": {
                      "ownKey": "innerdcerrornotificationsubscription",
                      "ownPages": [{
                        "reference": {
                          "path": "javadoc",
                          "baseUrl": "/JacquardSDKAndroid",
                          "fileName": "com/google/android/jacquard/sdk/command/innerdcerrornotificationsubscription",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "/JacquardSDKAndroid/javadoc/com/google/android/jacquard/sdk/command/innerdcerrornotificationsubscription"
                        },
                        "description": "",
                        "title": "InnerDCErrorNotificationSubscription",
                        "content": "<p>Class to parse ErrorNotification .InnerDCErrorNotificationSubscription<\/p>\n<p>getExtensionType<\/p>\n<p>getNotification<\/p>\n"
                      }]
                    },
                    "innergesturenotificationsubscription": {
                      "ownKey": "innergesturenotificationsubscription",
                      "ownPages": [{
                        "reference": {
                          "path": "javadoc",
                          "baseUrl": "/JacquardSDKAndroid",
                          "fileName": "com/google/android/jacquard/sdk/command/innergesturenotificationsubscription",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "/JacquardSDKAndroid/javadoc/com/google/android/jacquard/sdk/command/innergesturenotificationsubscription"
                        },
                        "description": "",
                        "title": "InnerGestureNotificationSubscription",
                        "content": "<p>Use to subscribe to gesture notifications from the tag.<\/p>\n <p>When a gesture is performed on the gear a Gesture will be emitted from ConnectedJacquardTagInnerGestureNotificationSubscription\n\ngetExtensionType\n\ngetNotification\n\n"
                      }]
                    },
                    "playledpatterncommand": {
                      "ownKey": "playledpatterncommand",
                      "childrenPages": {
                        "color": {
                          "ownKey": "color",
                          "ownPages": [{
                            "reference": {
                              "path": "javadoc",
                              "baseUrl": "/JacquardSDKAndroid",
                              "fileName": "com/google/android/jacquard/sdk/command/playledpatterncommand/color",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "/JacquardSDKAndroid/javadoc/com/google/android/jacquard/sdk/command/playledpatterncommand/color"
                            },
                            "description": "",
                            "title": "PlayLedPatternCommand.Color",
                            "content": "<p>Color<\/p>\n<p>red<\/p>\n<p>green<\/p>\n<p>blue<\/p>\n<p>of<\/p>\n"
                          }]
                        },
                        "playtype": {
                          "ownKey": "playtype",
                          "ownPages": [{
                            "reference": {
                              "path": "javadoc",
                              "baseUrl": "/JacquardSDKAndroid",
                              "fileName": "com/google/android/jacquard/sdk/command/playledpatterncommand/playtype",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "/JacquardSDKAndroid/javadoc/com/google/android/jacquard/sdk/command/playledpatterncommand/playtype"
                            },
                            "description": "",
                            "title": "PlayLedPatternCommand.PlayType",
                            "content": "<p>An enum which contains LED pattern play type to play.PLAY<\/p>\n<p>TOGGLE<\/p>\n<p>values<\/p>\n<p>valueOf<\/p>\n"
                          }]
                        },
                        "ledpatterntype": {
                          "ownKey": "ledpatterntype",
                          "ownPages": [{
                            "reference": {
                              "path": "javadoc",
                              "baseUrl": "/JacquardSDKAndroid",
                              "fileName": "com/google/android/jacquard/sdk/command/playledpatterncommand/ledpatterntype",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "/JacquardSDKAndroid/javadoc/com/google/android/jacquard/sdk/command/playledpatterncommand/ledpatterntype"
                            },
                            "description": "",
                            "title": "PlayLedPatternCommand.LedPatternType",
                            "content": "<p>An enum which contains LED pattern type.PATTERN_TYPE_NONE\nNo led pattern is selected to play.\nPATTERN_TYPE_SOLID\nLED will play in solid pattern.\nPATTERN_TYPE_BREATHING\nLED will play in breathing pattern.\nPATTERN_TYPE_PULSING\nLED will play in pulse pattern.\nPATTERN_TYPE_SINGLE_BLINK\nLED blinks single times.\nPATTERN_TYPE_DOUBLE_BLINK\nLED blinks two times.\nPATTERN_TYPE_TRIPPLE_BLINK\nLED blinks three times.\nPATTERN_TYPE_CUSTOM\nLED will play in custom pattern.\nvalues<\/p>\n<p>valueOf<\/p>\n"
                          }]
                        },
                        "playledpatterncommandbuilder": {
                          "ownKey": "playledpatterncommandbuilder",
                          "ownPages": [{
                            "reference": {
                              "path": "javadoc",
                              "baseUrl": "/JacquardSDKAndroid",
                              "fileName": "com/google/android/jacquard/sdk/command/playledpatterncommand/playledpatterncommandbuilder",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "/JacquardSDKAndroid/javadoc/com/google/android/jacquard/sdk/command/playledpatterncommand/playledpatterncommandbuilder"
                            },
                            "description": "",
                            "title": "PlayLedPatternCommand.PlayLedPatternCommandBuilder",
                            "content": "<p>Builder class for creating PlayLedPatternCommand .PlayLedPatternCommandBuilder<\/p>\n<p>setFrames\nSets frames for a given led pattern command.\nsetDurationInMs\nSets commands duration to play.\nsetComponent\nSets component on which command to be played.\nsetLedPatternType\nSets led pattern type for given led pattern command.\nsetPlayType\nSets play type for given led pattern command.\nsetResumable\nSets if pattern does not need to be resumable if halted.\nsetHaltAll\nSets if pattern must resume upon interruption.\nsetIntensityLevel\nSets intensity level for given led pattern command.\nsetStringUtils<\/p>\n<p>build\nReturns builder for creating play led pattern command PlayLedPatternCommand .<\/p>\n"
                          }]
                        },
                        "frame": {
                          "ownKey": "frame",
                          "ownPages": [{
                            "reference": {
                              "path": "javadoc",
                              "baseUrl": "/JacquardSDKAndroid",
                              "fileName": "com/google/android/jacquard/sdk/command/playledpatterncommand/frame",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "/JacquardSDKAndroid/javadoc/com/google/android/jacquard/sdk/command/playledpatterncommand/frame"
                            },
                            "description": "",
                            "title": "PlayLedPatternCommand.Frame",
                            "content": "<p>Frame<\/p>\n<p>color<\/p>\n<p>durationInMs<\/p>\n<p>of<\/p>\n"
                          }]
                        }
                      },
                      "ownPages": [{
                        "reference": {
                          "path": "javadoc",
                          "baseUrl": "/JacquardSDKAndroid",
                          "fileName": "com/google/android/jacquard/sdk/command/playledpatterncommand",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "/JacquardSDKAndroid/javadoc/com/google/android/jacquard/sdk/command/playledpatterncommand"
                        },
                        "description": "",
                        "title": "PlayLedPatternCommand",
                        "content": "<p>Command for playing a list of Frame on a component.<\/p>\n <p>\n A command can be send to a connected tag via ConnectedJacquardTagparseResponse\n\ngetRequest\n\nnewBuilder\nReturns command request builder for this command.\n"
                      }]
                    },
                    "deviceinfo": {
                      "ownKey": "deviceinfo",
                      "ownPages": [{
                        "reference": {
                          "path": "javadoc",
                          "baseUrl": "/JacquardSDKAndroid",
                          "fileName": "com/google/android/jacquard/sdk/command/deviceinfo",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "/JacquardSDKAndroid/javadoc/com/google/android/jacquard/sdk/command/deviceinfo"
                        },
                        "description": "",
                        "title": "DeviceInfo",
                        "content": "<p>Data class for holding the device info.DeviceInfo<\/p>\n<p>gearId\nGear id of the device.\nvendorId\nVendor id of the device.\nproductId\nProduct id of the device.\nskuId\nSku id of the device.\nvendor\nVendor name of the device.\nmodel\nModel name of the device.\nmlVersion\nML firmware version of the device .\nbootloaderMajor\nBootloader major version of the device .\nbootloaderMinor\nBootloader minor version of the device .\nversion\nFirmware version of the device .\nserialNumber\nManufacturer serial number.\nuuid\nDevice unique id.\nrevision\nDevice revision.\nbootloaderPoint\nBootloader point version of the device .\nofTag<\/p>\n"
                      }]
                    },
                    "attachednotificationsubscription": {
                      "ownKey": "attachednotificationsubscription",
                      "ownPages": [{
                        "reference": {
                          "path": "javadoc",
                          "baseUrl": "/JacquardSDKAndroid",
                          "fileName": "com/google/android/jacquard/sdk/command/attachednotificationsubscription",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "/JacquardSDKAndroid/javadoc/com/google/android/jacquard/sdk/command/attachednotificationsubscription"
                        },
                        "description": "",
                        "title": "AttachedNotificationSubscription",
                        "content": "<p>Use to subscribe to gear attach/detach notification.<\/p>\n <p>When the gear is attached of detached a GearState will be emitted from ConnectedJacquardTagAttachedNotificationSubscription\n\nextract\n\n"
                      }]
                    },
                    "imusessionlistcommand": {
                      "ownKey": "imusessionlistcommand",
                      "ownPages": [{
                        "reference": {
                          "path": "javadoc",
                          "baseUrl": "/JacquardSDKAndroid",
                          "fileName": "com/google/android/jacquard/sdk/command/imusessionlistcommand",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "/JacquardSDKAndroid/javadoc/com/google/android/jacquard/sdk/command/imusessionlistcommand"
                        },
                        "description": "",
                        "title": "ImuSessionListCommand",
                        "content": "<p>Ujt command to fetch IMU session list. Once this command is executed, ujt will send ImuSessionListNotification per ImuSessionInfo .ImuSessionListCommand<\/p>\n<p>parseResponse<\/p>\n<p>getRequest<\/p>\n"
                      }]
                    },
                    "innerbatterystatusnotificationsubscription": {
                      "ownKey": "innerbatterystatusnotificationsubscription",
                      "ownPages": [{
                        "reference": {
                          "path": "javadoc",
                          "baseUrl": "/JacquardSDKAndroid",
                          "fileName": "com/google/android/jacquard/sdk/command/innerbatterystatusnotificationsubscription",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "/JacquardSDKAndroid/javadoc/com/google/android/jacquard/sdk/command/innerbatterystatusnotificationsubscription"
                        },
                        "description": "",
                        "title": "InnerBatteryStatusNotificationSubscription",
                        "content": "<p>Use to subscribe to battery status notifications.<\/p>\n <p>The tag will send a notification when the battery status changes and will be emitted from ConnectedJacquardTagInnerBatteryStatusNotificationSubscription\n\ngetExtensionType\n\ngetNotification\n\n"
                      }]
                    },
                    "datacollectionstatuscommand": {
                      "ownKey": "datacollectionstatuscommand",
                      "ownPages": [{
                        "reference": {
                          "path": "javadoc",
                          "baseUrl": "/JacquardSDKAndroid",
                          "fileName": "com/google/android/jacquard/sdk/command/datacollectionstatuscommand",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "/JacquardSDKAndroid/javadoc/com/google/android/jacquard/sdk/command/datacollectionstatuscommand"
                        },
                        "description": "",
                        "title": "DataCollectionStatusCommand",
                        "content": "<p>Ujt command get current data collection status.DataCollectionStatusCommand<\/p>\n<p>getExtension<\/p>\n<p>parseResponse<\/p>\n<p>getRequest<\/p>\n"
                      }]
                    },
                    "batterystatuscommand": {
                      "ownKey": "batterystatuscommand",
                      "ownPages": [{
                        "reference": {
                          "path": "javadoc",
                          "baseUrl": "/JacquardSDKAndroid",
                          "fileName": "com/google/android/jacquard/sdk/command/batterystatuscommand",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "/JacquardSDKAndroid/javadoc/com/google/android/jacquard/sdk/command/batterystatuscommand"
                        },
                        "description": "",
                        "title": "BatteryStatusCommand",
                        "content": "<p>Command for request the current battery status.<\/p>\n <p>\n A command can be send to a connected tag via ConnectedJacquardTagBatteryStatusCommand\n\ngetExtension\n\nparseResponse\n\ngetRequest\n\n"
                      }]
                    },
                    "renametagcommand": {
                      "ownKey": "renametagcommand",
                      "ownPages": [{
                        "reference": {
                          "path": "javadoc",
                          "baseUrl": "/JacquardSDKAndroid",
                          "fileName": "com/google/android/jacquard/sdk/command/renametagcommand",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "/JacquardSDKAndroid/javadoc/com/google/android/jacquard/sdk/command/renametagcommand"
                        },
                        "description": "",
                        "title": "RenameTagCommand",
                        "content": "<p>Command for renaming the Jacquard tag.<\/p>\n <p>A command can be send to a connected tag via ConnectedJacquardTagRenameTagCommand\nCreates a new instance of RenameTagCommand and when executed will rename the tag with provided\n tagName.\nexcludeResponseErrorChecks\n\ngetRequest\n\nparseResponse\n\n"
                      }]
                    },
                    "innercontinuoustouchnotificationsubscription": {
                      "ownKey": "innercontinuoustouchnotificationsubscription",
                      "ownPages": [{
                        "reference": {
                          "path": "javadoc",
                          "baseUrl": "/JacquardSDKAndroid",
                          "fileName": "com/google/android/jacquard/sdk/command/innercontinuoustouchnotificationsubscription",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "/JacquardSDKAndroid/javadoc/com/google/android/jacquard/sdk/command/innercontinuoustouchnotificationsubscription"
                        },
                        "description": "",
                        "title": "InnerContinuousTouchNotificationSubscription",
                        "content": "<p>Use to subscribe to continuous touch data from the tag.<\/p>\n <p>When a the gear is touch TouchData will be emitted from ConnectedJacquardTagInnerContinuousTouchNotificationSubscription\n\ngetExtensionType\n\ngetNotification\n\n"
                      }]
                    },
                    "startimusessioncommand": {
                      "ownKey": "startimusessioncommand",
                      "ownPages": [{
                        "reference": {
                          "path": "javadoc",
                          "baseUrl": "/JacquardSDKAndroid",
                          "fileName": "com/google/android/jacquard/sdk/command/startimusessioncommand",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "/JacquardSDKAndroid/javadoc/com/google/android/jacquard/sdk/command/startimusessioncommand"
                        },
                        "description": "",
                        "title": "StartImuSessionCommand",
                        "content": "<p>UJT command to start IMU session. It will return session id if successful.StartImuSessionCommand\nInitializes the command.\nparseResponse<\/p>\n<p>excludeResponseErrorChecks<\/p>\n<p>getRequest<\/p>\n"
                      }]
                    },
                    "dfuexecuteupdatenotificationsubscription": {
                      "ownKey": "dfuexecuteupdatenotificationsubscription",
                      "ownPages": [{
                        "reference": {
                          "path": "javadoc",
                          "baseUrl": "/JacquardSDKAndroid",
                          "fileName": "com/google/android/jacquard/sdk/command/dfuexecuteupdatenotificationsubscription",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "/JacquardSDKAndroid/javadoc/com/google/android/jacquard/sdk/command/dfuexecuteupdatenotificationsubscription"
                        },
                        "description": "",
                        "title": "DfuExecuteUpdateNotificationSubscription",
                        "content": "<p>Use to subscribe for dfu execute update notifications from the gear.<\/p>\n <p>When a dfuExecuteCommand executed for gear a DFUExecuteUpdateNotification will be\n emitted from ConnectedJacquardTagDfuExecuteUpdateNotificationSubscription\n\nextract\n\n"
                      }]
                    },
                    "deviceinfocommand": {
                      "ownKey": "deviceinfocommand",
                      "ownPages": [{
                        "reference": {
                          "path": "javadoc",
                          "baseUrl": "/JacquardSDKAndroid",
                          "fileName": "com/google/android/jacquard/sdk/command/deviceinfocommand",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "/JacquardSDKAndroid/javadoc/com/google/android/jacquard/sdk/command/deviceinfocommand"
                        },
                        "description": "",
                        "title": "DeviceInfoCommand",
                        "content": "<p>Command for getting device information.DeviceInfoCommand\nCreates a new instance of DeviceInfoCommand.\ngetExtension<\/p>\n<p>parseResponse<\/p>\n<p>getRequest<\/p>\n"
                      }]
                    },
                    "imusessionlistnotification": {
                      "ownKey": "imusessionlistnotification",
                      "ownPages": [{
                        "reference": {
                          "path": "javadoc",
                          "baseUrl": "/JacquardSDKAndroid",
                          "fileName": "com/google/android/jacquard/sdk/command/imusessionlistnotification",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "/JacquardSDKAndroid/javadoc/com/google/android/jacquard/sdk/command/imusessionlistnotification"
                        },
                        "description": "",
                        "title": "ImuSessionListNotification",
                        "content": "<p>Ujt will send this notification per IMU session when ImuSessionListCommand is submitted.ImuSessionListNotification<\/p>\n<p>extract<\/p>\n"
                      }]
                    },
                    "protocommandrequest": {
                      "ownKey": "protocommandrequest",
                      "ownPages": [{
                        "reference": {
                          "path": "javadoc",
                          "baseUrl": "/JacquardSDKAndroid",
                          "fileName": "com/google/android/jacquard/sdk/command/protocommandrequest",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "/JacquardSDKAndroid/javadoc/com/google/android/jacquard/sdk/command/protocommandrequest"
                        },
                        "description": "",
                        "title": "ProtoCommandRequest",
                        "content": "<p>Base interface for all command send to the tag.ProtoCommandRequest<\/p>\n<p>getId\nAll classes must call this api to include id to the ProtoRequest\nparseResponse\nParses the raw response received from the tag into a Result object.\ngetRequest\nReturns the request to be sent to the tag.\ngetExtension\nReturns an extension from proto to parse the base response to the required form.\nresponseId\nReturns the response id from the tag.\nsetResponseId\nSets the response id from the tag.\nShould be called by the ProtoCommandRequest if excludeResponseErrorChecks returns true.\nexcludeResponseErrorChecks\nExcludes response status check for the implementation.\nNeed to call setResponseId(id) from parseResponse(byte[]) if returned true.\nresponseErrorCheck<\/p>\n<p>toString<\/p>\n"
                      }]
                    },
                    "batterystatusnotificationsubscription": {
                      "ownKey": "batterystatusnotificationsubscription",
                      "ownPages": [{
                        "reference": {
                          "path": "javadoc",
                          "baseUrl": "/JacquardSDKAndroid",
                          "fileName": "com/google/android/jacquard/sdk/command/batterystatusnotificationsubscription",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "/JacquardSDKAndroid/javadoc/com/google/android/jacquard/sdk/command/batterystatusnotificationsubscription"
                        },
                        "description": "",
                        "title": "BatteryStatusNotificationSubscription",
                        "content": "<p>Use to subscribe to battery status notifications.<\/p>\n <p>\n  The tag will send a notification when the battery status changes and will be emitted from ConnectedJacquardTagBatteryStatusNotificationSubscription\n\nextract\n\n"
                      }]
                    },
                    "innernotification": {
                      "ownKey": "innernotification",
                      "ownPages": [{
                        "reference": {
                          "path": "javadoc",
                          "baseUrl": "/JacquardSDKAndroid",
                          "fileName": "com/google/android/jacquard/sdk/command/innernotification",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "/JacquardSDKAndroid/javadoc/com/google/android/jacquard/sdk/command/innernotification"
                        },
                        "description": "",
                        "title": "InnerNotification",
                        "content": "<p>Interface for subscribing to notifications from the tag.InnerNotification<\/p>\n<p>getExtensionType<\/p>\n<p>extract\nExtracts the payload from the notification. Returns null of the notification is not the\nexpected notification.\ngetNotification<\/p>\n"
                      }]
                    },
                    "getimusessiondatacommand": {
                      "ownKey": "getimusessiondatacommand",
                      "ownPages": [{
                        "reference": {
                          "path": "javadoc",
                          "baseUrl": "/JacquardSDKAndroid",
                          "fileName": "com/google/android/jacquard/sdk/command/getimusessiondatacommand",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "/JacquardSDKAndroid/javadoc/com/google/android/jacquard/sdk/command/getimusessiondatacommand"
                        },
                        "description": "",
                        "title": "GetImuSessionDataCommand",
                        "content": "<p>Ujt command to request for imu session data. Once this command is executed, start observing ConnectedJacquardTag .GetImuSessionDataCommand<\/p>\n<p>getExtension<\/p>\n<p>parseResponse<\/p>\n<p>getRequest<\/p>\n"
                      }]
                    },
                    "innerdfuexecuteupdatenotificationsubscription": {
                      "ownKey": "innerdfuexecuteupdatenotificationsubscription",
                      "ownPages": [{
                        "reference": {
                          "path": "javadoc",
                          "baseUrl": "/JacquardSDKAndroid",
                          "fileName": "com/google/android/jacquard/sdk/command/innerdfuexecuteupdatenotificationsubscription",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "/JacquardSDKAndroid/javadoc/com/google/android/jacquard/sdk/command/innerdfuexecuteupdatenotificationsubscription"
                        },
                        "description": "",
                        "title": "InnerDfuExecuteUpdateNotificationSubscription",
                        "content": "<p>Use to subscribe for dfu execute update notifications from the gear.<\/p>\n <p>When a dfuExecuteCommand executed for gear a DFUExecuteUpdateNotification will be\n emitted from ConnectedJacquardTagInnerDfuExecuteUpdateNotificationSubscription\n\ngetExtensionType\n\ngetNotification\n\n"
                      }]
                    },
                    "getconfigcommand": {
                      "ownKey": "getconfigcommand",
                      "ownPages": [{
                        "reference": {
                          "path": "javadoc",
                          "baseUrl": "/JacquardSDKAndroid",
                          "fileName": "com/google/android/jacquard/sdk/command/getconfigcommand",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "/JacquardSDKAndroid/javadoc/com/google/android/jacquard/sdk/command/getconfigcommand"
                        },
                        "description": "",
                        "title": "GetConfigCommand",
                        "content": "<p>Reads ConfigElement from tag.GetConfigCommand<\/p>\n<p>getExtension<\/p>\n<p>parseResponse\nParses the raw response received from the tag into a Result object.\ngetRequest\nReturns the request to be sent to the tag.<\/p>\n"
                      }]
                    },
                    "loadmodulecommand": {
                      "ownKey": "loadmodulecommand",
                      "ownPages": [{
                        "reference": {
                          "path": "javadoc",
                          "baseUrl": "/JacquardSDKAndroid",
                          "fileName": "com/google/android/jacquard/sdk/command/loadmodulecommand",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "/JacquardSDKAndroid/javadoc/com/google/android/jacquard/sdk/command/loadmodulecommand"
                        },
                        "description": "",
                        "title": "LoadModuleCommand",
                        "content": "<p>Ujt command to load/activate the loadable module. When module is loaded, you will be notified as LoadModuleNotificationSubscription .LoadModuleCommand<\/p>\n<p>getRequest<\/p>\n<p>parseResponse<\/p>\n"
                      }]
                    },
                    "batterystatus": {
                      "ownKey": "batterystatus",
                      "childrenPages": {"chargingstate": {
                        "ownKey": "chargingstate",
                        "ownPages": [{
                          "reference": {
                            "path": "javadoc",
                            "baseUrl": "/JacquardSDKAndroid",
                            "fileName": "com/google/android/jacquard/sdk/command/batterystatus/chargingstate",
                            "extension": "html",
                            "usePrettyUrl": true,
                            "link": "/JacquardSDKAndroid/javadoc/com/google/android/jacquard/sdk/command/batterystatus/chargingstate"
                          },
                          "description": "",
                          "title": "BatteryStatus.ChargingState",
                          "content": "<p>CHARGING<\/p>\n<p>NOT_CHARGING<\/p>\n<p>values<\/p>\n<p>valueOf<\/p>\n"
                        }]
                      }},
                      "ownPages": [{
                        "reference": {
                          "path": "javadoc",
                          "baseUrl": "/JacquardSDKAndroid",
                          "fileName": "com/google/android/jacquard/sdk/command/batterystatus",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "/JacquardSDKAndroid/javadoc/com/google/android/jacquard/sdk/command/batterystatus"
                        },
                        "description": "",
                        "title": "BatteryStatus",
                        "content": "<p>Data class for holding the tags battery status.BatteryStatus<\/p>\n<p>chargingState\nReturns the charging state.\nbatteryLevel\nReturns the battery level from 0 to 100.<\/p>\n"
                      }]
                    },
                    "settouchmodecommand": {
                      "ownKey": "settouchmodecommand",
                      "ownPages": [{
                        "reference": {
                          "path": "javadoc",
                          "baseUrl": "/JacquardSDKAndroid",
                          "fileName": "com/google/android/jacquard/sdk/command/settouchmodecommand",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "/JacquardSDKAndroid/javadoc/com/google/android/jacquard/sdk/command/settouchmodecommand"
                        },
                        "description": "",
                        "title": "SetTouchModeCommand",
                        "content": "<p>Command for setting the TouchMode for a component.<\/p>\n <p>\n A command can be send to a connected tag via ConnectedJacquardTagSetTouchModeCommand\nCreates a new instance of SetTouchModeCommand and when executed will set TouchMode to the\n component.\nparseResponse\n\ngetRequest\n\n"
                      }]
                    },
                    "hapticcommand": {
                      "ownKey": "hapticcommand",
                      "childrenPages": {
                        "pattern": {
                          "ownKey": "pattern",
                          "ownPages": [{
                            "reference": {
                              "path": "javadoc",
                              "baseUrl": "/JacquardSDKAndroid",
                              "fileName": "com/google/android/jacquard/sdk/command/hapticcommand/pattern",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "/JacquardSDKAndroid/javadoc/com/google/android/jacquard/sdk/command/hapticcommand/pattern"
                            },
                            "description": "",
                            "title": "HapticCommand.Pattern",
                            "content": "<p>A enum which contains HapticSymbolType pattern.HAPTIC_SYMBOL_HALTED<\/p>\n<p>HAPTIC_SYMBOL_SINE_INCREASE<\/p>\n<p>HAPTIC_SYMBOL_SINE_DECREASE<\/p>\n<p>HAPTIC_SYMBOL_LINEAR_INCREASE<\/p>\n<p>HAPTIC_SYMBOL_LINEAR_DECREASE<\/p>\n<p>HAPTIC_SYMBOL_PARABOLIC_INCREASE<\/p>\n<p>HAPTIC_SYMBOL_PARABOLIC_DECREASE<\/p>\n<p>HAPTIC_SYMBOL_CONST_ON<\/p>\n<p>values<\/p>\n<p>valueOf<\/p>\n"
                          }]
                        },
                        "frame": {
                          "ownKey": "frame",
                          "childrenPages": {"builder": {
                            "ownKey": "builder",
                            "ownPages": [{
                              "reference": {
                                "path": "javadoc",
                                "baseUrl": "/JacquardSDKAndroid",
                                "fileName": "com/google/android/jacquard/sdk/command/hapticcommand/frame/builder",
                                "extension": "html",
                                "usePrettyUrl": true,
                                "link": "/JacquardSDKAndroid/javadoc/com/google/android/jacquard/sdk/command/hapticcommand/frame/builder"
                              },
                              "description": "",
                              "title": "HapticCommand.Frame.Builder",
                              "content": "<p>Builder class for Frame .Builder<\/p>\n<p>setOnMs\nSets onMs duration to play haptics on gear component.\nsetOffMs\nSets offMs duration for haptics on gear component.\nsetPattern\nSets haptic pattern Pattern which plays on gear component.\nsetMaxAmplitudePercent\nSets maxAmplitudePercent of haptic pattern to play on gear component.\nsetRepeatNminusOne\nSets repetition of haptic pattern to play on gear component.\nbuild\nReturns haptic frame Frame which plays on gear component.<\/p>\n"
                            }]
                          }},
                          "ownPages": [{
                            "reference": {
                              "path": "javadoc",
                              "baseUrl": "/JacquardSDKAndroid",
                              "fileName": "com/google/android/jacquard/sdk/command/hapticcommand/frame",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "/JacquardSDKAndroid/javadoc/com/google/android/jacquard/sdk/command/hapticcommand/frame"
                            },
                            "description": "",
                            "title": "HapticCommand.Frame",
                            "content": "<p>A frame which plays the haptic pattern on gear component.Frame<\/p>\n<p>onMs<\/p>\n<p>offMs<\/p>\n<p>pattern<\/p>\n<p>maxAmplitudePercent<\/p>\n<p>repeatNminusOne<\/p>\n<p>builder<\/p>\n"
                          }]
                        }
                      },
                      "ownPages": [{
                        "reference": {
                          "path": "javadoc",
                          "baseUrl": "/JacquardSDKAndroid",
                          "fileName": "com/google/android/jacquard/sdk/command/hapticcommand",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "/JacquardSDKAndroid/javadoc/com/google/android/jacquard/sdk/command/hapticcommand"
                        },
                        "description": "",
                        "title": "HapticCommand",
                        "content": "<p>A class which forms haptic command request and plays on gear component.HapticCommand\nCreates a new instance of HapticCommand and when executed play the frames on the component.\nparseResponse<\/p>\n<p>getRequest<\/p>\n"
                      }]
                    }
                  },
                  "ownPages": [{
                    "reference": {
                      "path": "javadoc",
                      "baseUrl": "/JacquardSDKAndroid",
                      "fileName": "com/google/android/jacquard/sdk/command",
                      "extension": "html",
                      "usePrettyUrl": true,
                      "link": "/JacquardSDKAndroid/javadoc/com/google/android/jacquard/sdk/command"
                    },
                    "description": "",
                    "title": "com.google.android.jacquard.sdk.command",
                    "content": "<p>InnerGestureNotificationSubscription\nUse to subscribe to gesture notifications from the tag.<\/p>\n <p>When a gesture is performed on the gear a Gesture will be emitted from ConnectedJacquardTag\nSetTouchModeCommand\nCommand for setting the TouchMode for a component.\n <p>\n A command can be send to a connected tag via ConnectedJacquardTag\nStartImuStreamingCommand\nUJT command to start Imu samples streaming. <\/br> Observe ConnectedJacquardTag to receive ImuStream .\nDfuExecuteUpdateNotificationSubscription\nUse to subscribe for dfu execute update notifications from the gear.\n\n <p>When a dfuExecuteCommand executed for gear a DFUExecuteUpdateNotification will be\n emitted from ConnectedJacquardTag\nDCErrorNotificationSubscription\nError notification subscription.\nImuSessionListCommand\nUjt command to fetch IMU session list. Once this command is executed, ujt will send ImuSessionListNotification per ImuSessionInfo .\nUjtWriteConfigCommand\nCommand for writing BleConfiguration to the tag.\n <p>\n A command can be send to a connected tag via ConnectedJacquardTag\nGetImuSessionDataCommand\nUjt command to request for imu session data. Once this command is executed, start observing ConnectedJacquardTag .\nInnerDfuExecuteUpdateNotificationSubscription\nUse to subscribe for dfu execute update notifications from the gear.\n\n <p>When a dfuExecuteCommand executed for gear a DFUExecuteUpdateNotification will be\n emitted from ConnectedJacquardTag\nInnerBatteryStatusNotificationSubscription\nUse to subscribe to battery status notifications.\n\n <p>The tag will send a notification when the battery status changes and will be emitted from ConnectedJacquardTag\nEraseImuSessionCommand\nUjt command to erase specific or all IMU Sessions.\nListModulesCommand\nUjt command to fetch all Module present.\nBatteryStatusCommand\nCommand for request the current battery status.\n <p>\n A command can be send to a connected tag via ConnectedJacquardTag\nDeviceInfoCommand\nCommand for getting device information.\nDataCollectionStatusCommand\nUjt command get current data collection status.\nRenameTagCommand\nCommand for renaming the Jacquard tag.\n\n <p>A command can be send to a connected tag via ConnectedJacquardTag\nStopImuSessionCommand\nUjt command to stop IMU Session.\nUjtReadConfigCommand\nCommand to read BleConfiguration from ConnectedJacquardTag .\nUnloadModuleCommand\nUjt command to unload/deactivate the loadable module.\nInnerNotification\nInterface for subscribing to notifications from the tag.\nProtoCommandRequest\nBase interface for all command send to the tag.\nGestureNotificationSubscription\nUse to subscribe to gesture notifications from the tag.\n\n <p>When a gesture is performed on the gear a Gesture will be emitted from ConnectedJacquardTag\nDeviceInfo\nData class for holding the device info.\nContinuousTouchNotificationSubscription\nUse to subscribe to continuous touch data from the tag.\n\n <p>When a the gear is touch TouchData will be emitted from ConnectedJacquardTag\nNotificationSubscription\nInterface for subscribing to notifications from the tag.\nPlayLedPatternCommand\nCommand for playing a list of Frame on a component.\n <p>\n A command can be send to a connected tag via ConnectedJacquardTag\nPlayLedPatternCommand.Color\n\nPlayLedPatternCommand.Frame\n\nPlayLedPatternCommand.PlayLedPatternCommandBuilder\nBuilder class for creating PlayLedPatternCommand .\nPlayLedPatternCommand.LedPatternType\nAn enum which contains LED pattern type.\nPlayLedPatternCommand.PlayType\nAn enum which contains LED pattern play type to play.\nInnerDCErrorNotificationSubscription\nClass to parse ErrorNotification .\nLoadModuleNotificationSubscription\nThis subscription class gives you a ability to get subscribed to load module notifications.\nAttachedNotificationSubscription\nUse to subscribe to gear attach/detach notification.\n\n <p>When the gear is attached of detached a GearState will be emitted from ConnectedJacquardTag\nBatteryStatus\nData class for holding the tags battery status.\nBatteryStatus.ChargingState\n\nImuSessionListNotification\nUjt will send this notification per IMU session when ImuSessionListCommand is submitted.\nGetConfigCommand\nReads ConfigElement from tag.\nHapticCommand\nA class which forms haptic command request and plays on gear component.\nHapticCommand.Frame\nA frame which plays the haptic pattern on gear component.\nHapticCommand.Frame.Builder\nBuilder class for Frame .\nHapticCommand.Pattern\nA enum which contains HapticSymbolType pattern.\nInnerContinuousTouchNotificationSubscription\nUse to subscribe to continuous touch data from the tag.\n\n <p>When a the gear is touch TouchData will be emitted from ConnectedJacquardTag\nLoadModuleCommand\nUjt command to load/activate the loadable module. When module is loaded, you will be notified as LoadModuleNotificationSubscription .\nSetConfigCommand\nWrites Key-Value pair to tag.\nSetConfigCommand.SettingsType\nData types for tag config values.\nBatteryStatusNotificationSubscription\nUse to subscribe to battery status notifications.\n <p>\n  The tag will send a notification when the battery status changes and will be emitted from ConnectedJacquardTag\nStartImuSessionCommand\nUJT command to start IMU session. It will return session id if successful.\n"
                  }]
                },
                "managerscanningexception": {
                  "ownKey": "managerscanningexception",
                  "childrenPages": {
                    "bluetoothunavailableexception": {
                      "ownKey": "bluetoothunavailableexception",
                      "ownPages": [{
                        "reference": {
                          "path": "javadoc",
                          "baseUrl": "/JacquardSDKAndroid",
                          "fileName": "com/google/android/jacquard/sdk/managerscanningexception/bluetoothunavailableexception",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "/JacquardSDKAndroid/javadoc/com/google/android/jacquard/sdk/managerscanningexception/bluetoothunavailableexception"
                        },
                        "description": "",
                        "title": "ManagerScanningException.BluetoothUnavailableException",
                        "content": "<p>Exception thrown when the Bluetooth adapter is disabled.BluetoothUnavailableException\nConstructs an BluetoothUnavailableException.<\/p>\n"
                      }]
                    },
                    "bluetoothdevicenotfound": {
                      "ownKey": "bluetoothdevicenotfound",
                      "ownPages": [{
                        "reference": {
                          "path": "javadoc",
                          "baseUrl": "/JacquardSDKAndroid",
                          "fileName": "com/google/android/jacquard/sdk/managerscanningexception/bluetoothdevicenotfound",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "/JacquardSDKAndroid/javadoc/com/google/android/jacquard/sdk/managerscanningexception/bluetoothdevicenotfound"
                        },
                        "description": "",
                        "title": "ManagerScanningException.BluetoothDeviceNotFound",
                        "content": "<p>Exception throws when a Bluetooth device is not found.BluetoothDeviceNotFound\nConstructs an BluetoothDeviceNotFound with the address of the device requested.\nmessage.<\/p>\n"
                      }]
                    }
                  },
                  "ownPages": [{
                    "reference": {
                      "path": "javadoc",
                      "baseUrl": "/JacquardSDKAndroid",
                      "fileName": "com/google/android/jacquard/sdk/managerscanningexception",
                      "extension": "html",
                      "usePrettyUrl": true,
                      "link": "/JacquardSDKAndroid/javadoc/com/google/android/jacquard/sdk/managerscanningexception"
                    },
                    "description": "",
                    "title": "ManagerScanningException",
                    "content": "<p>Base class for all exceptions thrown by JacquardManager .ManagerScanningException\nConstructs an ManagerScanningException with the specified detail\nmessage.  A detail message is a String that describes this particular\nexception.<\/p>\n"
                  }]
                },
                "imu": {
                  "ownKey": "imu",
                  "childrenPages": {
                    "exception": {
                      "ownKey": "exception",
                      "childrenPages": {
                        "inprogressdcexception": {
                          "ownKey": "inprogressdcexception",
                          "ownPages": [{
                            "reference": {
                              "path": "javadoc",
                              "baseUrl": "/JacquardSDKAndroid",
                              "fileName": "com/google/android/jacquard/sdk/imu/exception/inprogressdcexception",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "/JacquardSDKAndroid/javadoc/com/google/android/jacquard/sdk/imu/exception/inprogressdcexception"
                            },
                            "description": "",
                            "title": "InprogressDCException",
                            "content": "<p>Exception thrown when tag is already collecting data and you tried to start again.InprogressDCException<\/p>\n<p>getMessage<\/p>\n"
                          }]
                        },
                        "invalidstatedcexception": {
                          "ownKey": "invalidstatedcexception",
                          "ownPages": [{
                            "reference": {
                              "path": "javadoc",
                              "baseUrl": "/JacquardSDKAndroid",
                              "fileName": "com/google/android/jacquard/sdk/imu/exception/invalidstatedcexception",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "/JacquardSDKAndroid/javadoc/com/google/android/jacquard/sdk/imu/exception/invalidstatedcexception"
                            },
                            "description": "",
                            "title": "InvalidStateDCException",
                            "content": "<p>Exception thrown when tag is in invalid state to start data collection.InvalidStateDCException<\/p>\n"
                          }]
                        },
                        "dcexception": {
                          "ownKey": "dcexception",
                          "ownPages": [{
                            "reference": {
                              "path": "javadoc",
                              "baseUrl": "/JacquardSDKAndroid",
                              "fileName": "com/google/android/jacquard/sdk/imu/exception/dcexception",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "/JacquardSDKAndroid/javadoc/com/google/android/jacquard/sdk/imu/exception/dcexception"
                            },
                            "description": "",
                            "title": "DCException",
                            "content": "<p>Exception occurred during IMU Sample collection.dataCollectionStatus<\/p>\n<p>dataCollectionMode<\/p>\n<p>DCException<\/p>\n<p>getDataCollectionStatus<\/p>\n<p>getDataCollectionMode<\/p>\n<p>toString<\/p>\n"
                          }]
                        }
                      },
                      "ownPages": [{
                        "reference": {
                          "path": "javadoc",
                          "baseUrl": "/JacquardSDKAndroid",
                          "fileName": "com/google/android/jacquard/sdk/imu/exception",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "/JacquardSDKAndroid/javadoc/com/google/android/jacquard/sdk/imu/exception"
                        },
                        "description": "",
                        "title": "com.google.android.jacquard.sdk.imu.exception",
                        "content": "<p>DCException\nException occurred during IMU Sample collection.\nInvalidStateDCException\nException thrown when tag is in invalid state to start data collection.\nInprogressDCException\nException thrown when tag is already collecting data and you tried to start again.<\/p>\n"
                      }]
                    },
                    "sensors": {
                      "ownKey": "sensors",
                      "ownPages": [{
                        "reference": {
                          "path": "javadoc",
                          "baseUrl": "/JacquardSDKAndroid",
                          "fileName": "com/google/android/jacquard/sdk/imu/sensors",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "/JacquardSDKAndroid/javadoc/com/google/android/jacquard/sdk/imu/sensors"
                        },
                        "description": "",
                        "title": "Sensors",
                        "content": "<p>Sensors used for data collection.IMU<\/p>\n<p>GEAR<\/p>\n<p>values<\/p>\n<p>valueOf<\/p>\n<p>id<\/p>\n<p>forId<\/p>\n"
                      }]
                    },
                    "parser": {
                      "ownKey": "parser",
                      "childrenPages": {
                        "imuparser": {
                          "ownKey": "imuparser",
                          "ownPages": [{
                            "reference": {
                              "path": "javadoc",
                              "baseUrl": "/JacquardSDKAndroid",
                              "fileName": "com/google/android/jacquard/sdk/imu/parser/imuparser",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "/JacquardSDKAndroid/javadoc/com/google/android/jacquard/sdk/imu/parser/imuparser"
                            },
                            "description": "",
                            "title": "ImuParser",
                            "content": "<p>Interface to parse Imu Samples raw file.parseImuSample\nParse to get ImuSample .\nparseImuSamples<\/p>\n<p>parseActionHeader\nParse to get DataCollectionActionHeader .<\/p>\n"
                          }]
                        },
                        "imuparserimpl": {
                          "ownKey": "imuparserimpl",
                          "ownPages": [{
                            "reference": {
                              "path": "javadoc",
                              "baseUrl": "/JacquardSDKAndroid",
                              "fileName": "com/google/android/jacquard/sdk/imu/parser/imuparserimpl",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "/JacquardSDKAndroid/javadoc/com/google/android/jacquard/sdk/imu/parser/imuparserimpl"
                            },
                            "description": "",
                            "title": "ImuParserImpl",
                            "content": "<p>Default implementation class for ImuParserIMU_SAMPLE_LENGTH<\/p>\n<p>ACTION_HEADER_LENGTH_PARTIAL<\/p>\n<p>ImuParserImpl<\/p>\n<p>parseImuSample<\/p>\n<p>parseImuSamples<\/p>\n<p>parseActionHeader<\/p>\n"
                          }]
                        },
                        "jqimuparser": {
                          "ownKey": "jqimuparser",
                          "ownPages": [{
                            "reference": {
                              "path": "javadoc",
                              "baseUrl": "/JacquardSDKAndroid",
                              "fileName": "com/google/android/jacquard/sdk/imu/parser/jqimuparser",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "/JacquardSDKAndroid/javadoc/com/google/android/jacquard/sdk/imu/parser/jqimuparser"
                            },
                            "description": "",
                            "title": "JQImuParser",
                            "content": "<p>Factory class to parse Raw IMU Samples.JQImuParser<\/p>\n<p>parseImuData\nStarts parsing raw imu sample binary file.<\/p>\n"
                          }]
                        },
                        "imusessiondata": {
                          "ownKey": "imusessiondata",
                          "childrenPages": {"imusamplecollection": {
                            "ownKey": "imusamplecollection",
                            "ownPages": [{
                              "reference": {
                                "path": "javadoc",
                                "baseUrl": "/JacquardSDKAndroid",
                                "fileName": "com/google/android/jacquard/sdk/imu/parser/imusessiondata/imusamplecollection",
                                "extension": "html",
                                "usePrettyUrl": true,
                                "link": "/JacquardSDKAndroid/javadoc/com/google/android/jacquard/sdk/imu/parser/imusessiondata/imusamplecollection"
                              },
                              "description": "",
                              "title": "ImuSessionData.ImuSampleCollection",
                              "content": "<p>Model class for ImuSample collection.ImuSampleCollection<\/p>\n<p>getImuSamples\nReturns Immutable list of ImuSample of this collection.\ngetActionId\nReturns action id.\nisError<\/p>\n"
                            }]
                          }},
                          "ownPages": [{
                            "reference": {
                              "path": "javadoc",
                              "baseUrl": "/JacquardSDKAndroid",
                              "fileName": "com/google/android/jacquard/sdk/imu/parser/imusessiondata",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "/JacquardSDKAndroid/javadoc/com/google/android/jacquard/sdk/imu/parser/imusessiondata"
                            },
                            "description": "",
                            "title": "ImuSessionData",
                            "content": "<p>Model class for parsed IMU raw sample binary file.ImuSessionData<\/p>\n<p>getImuSampleCollections\nReturns immutable list of ImuSampleCollection .\ngetDataCollectionMetadata\nReturns DataCollectionMetadata associated.\ngetImuSessionId\nReturns Imu Session id.\ngetImuConfig\nReturns ImuConfiguration used for this IMU Session.<\/p>\n"
                          }]
                        },
                        "imuparserexception": {
                          "ownKey": "imuparserexception",
                          "ownPages": [{
                            "reference": {
                              "path": "javadoc",
                              "baseUrl": "/JacquardSDKAndroid",
                              "fileName": "com/google/android/jacquard/sdk/imu/parser/imuparserexception",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "/JacquardSDKAndroid/javadoc/com/google/android/jacquard/sdk/imu/parser/imuparserexception"
                            },
                            "description": "",
                            "title": "ImuParserException",
                            "content": "<p>Exception if raw IMU sample file is not properly formatted and ImuParser is not able to\nparse it.ImuParserException<\/p>\n<p>ImuParserException<\/p>\n"
                          }]
                        }
                      },
                      "ownPages": [{
                        "reference": {
                          "path": "javadoc",
                          "baseUrl": "/JacquardSDKAndroid",
                          "fileName": "com/google/android/jacquard/sdk/imu/parser",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "/JacquardSDKAndroid/javadoc/com/google/android/jacquard/sdk/imu/parser"
                        },
                        "description": "",
                        "title": "com.google.android.jacquard.sdk.imu.parser",
                        "content": "<p>ImuParserException\nException if raw IMU sample file is not properly formatted and ImuParser is not able to\nparse it.\nImuSessionData\nModel class for parsed IMU raw sample binary file.\nImuSessionData.ImuSampleCollection\nModel class for ImuSample collection.\nJQImuParser\nFactory class to parse Raw IMU Samples.\nImuParserImpl\nDefault implementation class for ImuParser\nImuParser\nInterface to parse Imu Samples raw file.<\/p>\n"
                      }]
                    },
                    "model": {
                      "ownKey": "model",
                      "childrenPages": {
                        "imustream": {
                          "ownKey": "imustream",
                          "ownPages": [{
                            "reference": {
                              "path": "javadoc",
                              "baseUrl": "/JacquardSDKAndroid",
                              "fileName": "com/google/android/jacquard/sdk/imu/model/imustream",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "/JacquardSDKAndroid/javadoc/com/google/android/jacquard/sdk/imu/model/imustream"
                            },
                            "description": "",
                            "title": "ImuStream",
                            "content": "<p>Model class which holds ImuSample and metadata info.ImuStream<\/p>\n<p>imuSample<\/p>\n<p>imuConfig<\/p>\n<p>sensors<\/p>\n<p>metadata<\/p>\n<p>userId<\/p>\n<p>of<\/p>\n"
                          }]
                        },
                        "imusessioninfo": {
                          "ownKey": "imusessioninfo",
                          "childrenPages": {"builder": {
                            "ownKey": "builder",
                            "ownPages": [{
                              "reference": {
                                "path": "javadoc",
                                "baseUrl": "/JacquardSDKAndroid",
                                "fileName": "com/google/android/jacquard/sdk/imu/model/imusessioninfo/builder",
                                "extension": "html",
                                "usePrettyUrl": true,
                                "link": "/JacquardSDKAndroid/javadoc/com/google/android/jacquard/sdk/imu/model/imusessioninfo/builder"
                              },
                              "description": "",
                              "title": "ImuSessionInfo.Builder",
                              "content": "<p>Builder<\/p>\n<p>imuSessionId<\/p>\n<p>dcSessionId<\/p>\n<p>campaignId<\/p>\n<p>subjectId<\/p>\n<p>sensor<\/p>\n<p>productId<\/p>\n<p>imuSize<\/p>\n<p>build<\/p>\n"
                            }]
                          }},
                          "ownPages": [{
                            "reference": {
                              "path": "javadoc",
                              "baseUrl": "/JacquardSDKAndroid",
                              "fileName": "com/google/android/jacquard/sdk/imu/model/imusessioninfo",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "/JacquardSDKAndroid/javadoc/com/google/android/jacquard/sdk/imu/model/imusessioninfo"
                            },
                            "description": "",
                            "title": "ImuSessionInfo",
                            "content": "<p>Model class for Imu Session info.ImuSessionInfo<\/p>\n<p>imuSessionId<\/p>\n<p>dcSessionId<\/p>\n<p>campaignId<\/p>\n<p>subjectId<\/p>\n<p>sensor<\/p>\n<p>productId<\/p>\n<p>imuSize<\/p>\n<p>of<\/p>\n<p>of<\/p>\n<p>builder<\/p>\n<p>equals<\/p>\n<p>hashCode<\/p>\n<p>toString<\/p>\n"
                          }]
                        }
                      },
                      "ownPages": [{
                        "reference": {
                          "path": "javadoc",
                          "baseUrl": "/JacquardSDKAndroid",
                          "fileName": "com/google/android/jacquard/sdk/imu/model",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "/JacquardSDKAndroid/javadoc/com/google/android/jacquard/sdk/imu/model"
                        },
                        "description": "",
                        "title": "com.google.android.jacquard.sdk.imu.model",
                        "content": "<p>ImuSessionInfo\nModel class for Imu Session info.\nImuSessionInfo.Builder<\/p>\n<p>ImuStream\nModel class which holds ImuSample and metadata info.<\/p>\n"
                      }]
                    },
                    "imumodule": {
                      "ownKey": "imumodule",
                      "ownPages": [{
                        "reference": {
                          "path": "javadoc",
                          "baseUrl": "/JacquardSDKAndroid",
                          "fileName": "com/google/android/jacquard/sdk/imu/imumodule",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "/JacquardSDKAndroid/javadoc/com/google/android/jacquard/sdk/imu/imumodule"
                        },
                        "description": "",
                        "title": "ImuModule",
                        "content": "<p>IMU loadable module can be accessed using this class.SESSION_FILE_EXTENSION\nFile extension for downloaded Imu session.\nImuModule<\/p>\n<p>startImuSession\nStarts IMU Session.\ngetCurrentSessionId\nReads current session id stored on the tag. Returns empty string if no session id found.\ngetCurrentDataCollectionMode\nReturns current DataCollectionMode and null if mode is not found or error occurred.\nstartImuStreaming\nStarts collecting Imu samples.\nstartImuStreaming\nStarts collecting Imu samples with provided DataCollectionMetadata\nstopImuStreaming\nStops imu streaming.\nstopImuSession\nStops currently active imu session.\ngetDataCollectionStatus\nGives you current imu data collection status.\ngetImuSessionsList\nReturns a list of imu sessions present on ujt.\ndownloadImuData\nStarts downloading of imu session.\ndownloadImuData\nStarts downloading of imu session.\nparseImuData\nParses raw imu samples file.\nerase\nErase imu session.\nerase\nErase imu session.\neraseAll\nErases all imu sessions present on ujt.\ndestroy\nRelease resources.\ngetVidPidMid<\/p>\n"
                      }]
                    }
                  },
                  "ownPages": [{
                    "reference": {
                      "path": "javadoc",
                      "baseUrl": "/JacquardSDKAndroid",
                      "fileName": "com/google/android/jacquard/sdk/imu",
                      "extension": "html",
                      "usePrettyUrl": true,
                      "link": "/JacquardSDKAndroid/javadoc/com/google/android/jacquard/sdk/imu"
                    },
                    "description": "",
                    "title": "com.google.android.jacquard.sdk.imu",
                    "content": "<p>Sensors\nSensors used for data collection.\nImuModule\nIMU loadable module can be accessed using this class.\ncom.google.android.jacquard.sdk.imu.parser<\/p>\n<p>com.google.android.jacquard.sdk.imu.model<\/p>\n<p>com.google.android.jacquard.sdk.imu.exception<\/p>\n"
                  }]
                },
                "jqextensionregistry": {
                  "ownKey": "jqextensionregistry",
                  "ownPages": [{
                    "reference": {
                      "path": "javadoc",
                      "baseUrl": "/JacquardSDKAndroid",
                      "fileName": "com/google/android/jacquard/sdk/jqextensionregistry",
                      "extension": "html",
                      "usePrettyUrl": true,
                      "link": "/JacquardSDKAndroid/javadoc/com/google/android/jacquard/sdk/jqextensionregistry"
                    },
                    "description": "",
                    "title": "JqExtensionRegistry",
                    "content": "<p>Class holding the extension registry for Jacquard.instance\nA static instance extension registry for Jacquard.\nJqExtensionRegistry<\/p>\n"
                  }]
                },
                "dfu": {
                  "ownKey": "dfu",
                  "childrenPages": {
                    "execption": {
                      "ownKey": "execption",
                      "childrenPages": {
                        "insufficientbatteryexception": {
                          "ownKey": "insufficientbatteryexception",
                          "ownPages": [{
                            "reference": {
                              "path": "javadoc",
                              "baseUrl": "/JacquardSDKAndroid",
                              "fileName": "com/google/android/jacquard/sdk/dfu/execption/insufficientbatteryexception",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "/JacquardSDKAndroid/javadoc/com/google/android/jacquard/sdk/dfu/execption/insufficientbatteryexception"
                            },
                            "description": "",
                            "title": "InsufficientBatteryException",
                            "content": "<p>Exception will be thrown in case of low battery.InsufficientBatteryException<\/p>\n<p>getBatteryLevel<\/p>\n<p>getThresholdLevel<\/p>\n"
                          }]
                        },
                        "firmwareupdatestoppedexception": {
                          "ownKey": "firmwareupdatestoppedexception",
                          "ownPages": [{
                            "reference": {
                              "path": "javadoc",
                              "baseUrl": "/JacquardSDKAndroid",
                              "fileName": "com/google/android/jacquard/sdk/dfu/execption/firmwareupdatestoppedexception",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "/JacquardSDKAndroid/javadoc/com/google/android/jacquard/sdk/dfu/execption/firmwareupdatestoppedexception"
                            },
                            "description": "",
                            "title": "FirmwareUpdateStoppedException",
                            "content": "<p>FirmwareUpdateStoppedException<\/p>\n"
                          }]
                        },
                        "updatemismatchexception": {
                          "ownKey": "updatemismatchexception",
                          "ownPages": [{
                            "reference": {
                              "path": "javadoc",
                              "baseUrl": "/JacquardSDKAndroid",
                              "fileName": "com/google/android/jacquard/sdk/dfu/execption/updatemismatchexception",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "/JacquardSDKAndroid/javadoc/com/google/android/jacquard/sdk/dfu/execption/updatemismatchexception"
                            },
                            "description": "",
                            "title": "UpdateMismatchException",
                            "content": "<p>UpdateMismatchException<\/p>\n"
                          }]
                        },
                        "updatedfirmwarenotfoundexception": {
                          "ownKey": "updatedfirmwarenotfoundexception",
                          "ownPages": [{
                            "reference": {
                              "path": "javadoc",
                              "baseUrl": "/JacquardSDKAndroid",
                              "fileName": "com/google/android/jacquard/sdk/dfu/execption/updatedfirmwarenotfoundexception",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "/JacquardSDKAndroid/javadoc/com/google/android/jacquard/sdk/dfu/execption/updatedfirmwarenotfoundexception"
                            },
                            "description": "",
                            "title": "UpdatedFirmwareNotFoundException",
                            "content": "<p>Exception will be thrown in case of no firmware update found.UpdatedFirmwareNotFoundException<\/p>\n"
                          }]
                        }
                      },
                      "ownPages": [{
                        "reference": {
                          "path": "javadoc",
                          "baseUrl": "/JacquardSDKAndroid",
                          "fileName": "com/google/android/jacquard/sdk/dfu/execption",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "/JacquardSDKAndroid/javadoc/com/google/android/jacquard/sdk/dfu/execption"
                        },
                        "description": "",
                        "title": "com.google.android.jacquard.sdk.dfu.execption",
                        "content": "<p>UpdateMismatchException<\/p>\n<p>FirmwareUpdateStoppedException<\/p>\n<p>UpdatedFirmwareNotFoundException\nException will be thrown in case of no firmware update found.\nInsufficientBatteryException\nException will be thrown in case of low battery.<\/p>\n"
                      }]
                    },
                    "dfumanagerimpl": {
                      "ownKey": "dfumanagerimpl",
                      "ownPages": [{
                        "reference": {
                          "path": "javadoc",
                          "baseUrl": "/JacquardSDKAndroid",
                          "fileName": "com/google/android/jacquard/sdk/dfu/dfumanagerimpl",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "/JacquardSDKAndroid/javadoc/com/google/android/jacquard/sdk/dfu/dfumanagerimpl"
                        },
                        "description": "",
                        "title": "DfuManagerImpl",
                        "content": "<p>Concrete implementation of DfuManager .DfuManagerImpl<\/p>\n<p>applyUpdates<\/p>\n<p>applyModuleUpdate<\/p>\n<p>checkFirmware<\/p>\n<p>checkFirmware<\/p>\n<p>checkModuleUpdate<\/p>\n<p>checkModuleUpdate<\/p>\n<p>executeUpdates<\/p>\n<p>stop<\/p>\n<p>getCurrentState<\/p>\n"
                      }]
                    },
                    "firmwareupdatestate": {
                      "ownKey": "firmwareupdatestate",
                      "childrenPages": {"type": {
                        "ownKey": "type",
                        "ownPages": [{
                          "reference": {
                            "path": "javadoc",
                            "baseUrl": "/JacquardSDKAndroid",
                            "fileName": "com/google/android/jacquard/sdk/dfu/firmwareupdatestate/type",
                            "extension": "html",
                            "usePrettyUrl": true,
                            "link": "/JacquardSDKAndroid/javadoc/com/google/android/jacquard/sdk/dfu/firmwareupdatestate/type"
                          },
                          "description": "",
                          "title": "FirmwareUpdateState.Type",
                          "content": "<p>IDLE<\/p>\n<p>PREPARING_TO_TRANSFER<\/p>\n<p>TRANSFER_PROGRESS<\/p>\n<p>TRANSFERRED<\/p>\n<p>EXECUTING<\/p>\n<p>COMPLETED<\/p>\n<p>STOPPED<\/p>\n<p>ERROR<\/p>\n<p>values<\/p>\n<p>valueOf<\/p>\n"
                        }]
                      }},
                      "ownPages": [{
                        "reference": {
                          "path": "javadoc",
                          "baseUrl": "/JacquardSDKAndroid",
                          "fileName": "com/google/android/jacquard/sdk/dfu/firmwareupdatestate",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "/JacquardSDKAndroid/javadoc/com/google/android/jacquard/sdk/dfu/firmwareupdatestate"
                        },
                        "description": "",
                        "title": "FirmwareUpdateState",
                        "content": "<p>The states of FirmwareUpdateStateMachine .FirmwareUpdateState<\/p>\n<p>ofIdle<\/p>\n<p>ofPreparingToTransfer<\/p>\n<p>ofTransferProgress<\/p>\n<p>ofTransferred<\/p>\n<p>ofExecuting<\/p>\n<p>ofCompleted<\/p>\n<p>ofStopped<\/p>\n<p>ofError<\/p>\n<p>getType<\/p>\n<p>idle<\/p>\n<p>preparingToTransfer<\/p>\n<p>transferProgress<\/p>\n<p>transferred<\/p>\n<p>executing<\/p>\n<p>completed<\/p>\n<p>stopped<\/p>\n<p>error<\/p>\n"
                      }]
                    },
                    "model": {
                      "ownKey": "model",
                      "childrenPages": {
                        "platformsettings": {
                          "ownKey": "platformsettings",
                          "ownPages": [{
                            "reference": {
                              "path": "javadoc",
                              "baseUrl": "/JacquardSDKAndroid",
                              "fileName": "com/google/android/jacquard/sdk/dfu/model/platformsettings",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "/JacquardSDKAndroid/javadoc/com/google/android/jacquard/sdk/dfu/model/platformsettings"
                            },
                            "description": "",
                            "title": "PlatformSettings",
                            "content": "<p>Representation of response for the SDK Settings rest api.PlatformSettings<\/p>\n<p>getMinimumBatteryDFU<\/p>\n<p>setMinimumBatteryDFU<\/p>\n"
                          }]
                        },
                        "filedescriptor": {
                          "ownKey": "filedescriptor",
                          "ownPages": [{
                            "reference": {
                              "path": "javadoc",
                              "baseUrl": "/JacquardSDKAndroid",
                              "fileName": "com/google/android/jacquard/sdk/dfu/model/filedescriptor",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "/JacquardSDKAndroid/javadoc/com/google/android/jacquard/sdk/dfu/model/filedescriptor"
                            },
                            "description": "",
                            "title": "FileDescriptor",
                            "content": "<p>POJO class Represents File downloaded from cloud.FileDescriptor<\/p>\n<p>inputStream\nThis method returns the inputStream from the response body.\ntotalSize\nTotal size of the downloaded file in bytes.\ncreate\nCreates new instance of FileDescriptor .<\/p>\n"
                          }]
                        },
                        "transferstate": {
                          "ownKey": "transferstate",
                          "ownPages": [{
                            "reference": {
                              "path": "javadoc",
                              "baseUrl": "/JacquardSDKAndroid",
                              "fileName": "com/google/android/jacquard/sdk/dfu/model/transferstate",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "/JacquardSDKAndroid/javadoc/com/google/android/jacquard/sdk/dfu/model/transferstate"
                            },
                            "description": "",
                            "title": "TransferState",
                            "content": "<p>Binary upload/download operation statusTransferState<\/p>\n<p>offset\nCurrent transferred offset value in bytes.\ntotal\nTotal download size in bytes.\ndone\nReturns if download is complete.\ncreate<\/p>\n"
                          }]
                        }
                      },
                      "ownPages": [{
                        "reference": {
                          "path": "javadoc",
                          "baseUrl": "/JacquardSDKAndroid",
                          "fileName": "com/google/android/jacquard/sdk/dfu/model",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "/JacquardSDKAndroid/javadoc/com/google/android/jacquard/sdk/dfu/model"
                        },
                        "description": "",
                        "title": "com.google.android.jacquard.sdk.dfu.model",
                        "content": "<p>TransferState\nBinary upload/download operation status\nPlatformSettings\nRepresentation of response for the SDK Settings rest api.\nFileDescriptor\nPOJO class Represents File downloaded from cloud.<\/p>\n"
                      }]
                    },
                    "dfumanager": {
                      "ownKey": "dfumanager",
                      "ownPages": [{
                        "reference": {
                          "path": "javadoc",
                          "baseUrl": "/JacquardSDKAndroid",
                          "fileName": "com/google/android/jacquard/sdk/dfu/dfumanager",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "/JacquardSDKAndroid/javadoc/com/google/android/jacquard/sdk/dfu/dfumanager"
                        },
                        "description": "",
                        "title": "DfuManager",
                        "content": "<p>Interface for device firmware update of connect Jacquard tag.checkFirmware\nCheck for firmware updated of provided components.\ncheckFirmware\nCheck for firmware updated of provided components.<\/p>\n <p>If vid/pid is provided, SDK will overwrite tag vid/pid and check updates. After success\n response, update info will be wrapped with tag vid/pid again to apply tag updates.\napplyUpdates\nApply the firmware updated.\nexecuteUpdates\nexecute the firmware updated.\napplyModuleUpdate\nApply the module updated.\ncheckModuleUpdate\nCheck for loadable module updated of provided module id.\ncheckModuleUpdate\nCheck for update for all loadable modules present on the ujt.\nstop\nStops the dfu process. If the dfu process is going on and also reset the dfu process.\ngetCurrentState\nReturns the current state of FirmwareUpdateStateMachine .\n"
                      }]
                    },
                    "dfuinfo": {
                      "ownKey": "dfuinfo",
                      "childrenPages": {"upgradestatus": {
                        "ownKey": "upgradestatus",
                        "ownPages": [{
                          "reference": {
                            "path": "javadoc",
                            "baseUrl": "/JacquardSDKAndroid",
                            "fileName": "com/google/android/jacquard/sdk/dfu/dfuinfo/upgradestatus",
                            "extension": "html",
                            "usePrettyUrl": true,
                            "link": "/JacquardSDKAndroid/javadoc/com/google/android/jacquard/sdk/dfu/dfuinfo/upgradestatus"
                          },
                          "description": "",
                          "title": "DFUInfo.UpgradeStatus",
                          "content": "<p>Set of dfu upgrade status.NOT_AVAILABLE<\/p>\n<p>OPTIONAL<\/p>\n<p>MANDATORY<\/p>\n<p>values<\/p>\n<p>valueOf<\/p>\n"
                        }]
                      }},
                      "ownPages": [{
                        "reference": {
                          "path": "javadoc",
                          "baseUrl": "/JacquardSDKAndroid",
                          "fileName": "com/google/android/jacquard/sdk/dfu/dfuinfo",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "/JacquardSDKAndroid/javadoc/com/google/android/jacquard/sdk/dfu/dfuinfo"
                        },
                        "description": "",
                        "title": "DFUInfo",
                        "content": "<p>Represents Image information.DFUInfo<\/p>\n<p>version<\/p>\n<p>dfuStatus<\/p>\n<p>vendorId<\/p>\n<p>productId<\/p>\n<p>moduleId<\/p>\n<p>downloadFilePath<\/p>\n<p>create<\/p>\n<p>create<\/p>\n<p>create\nCreate DFUInfo from remote response RemoteDfuInfo .\nisApplicableTo\nReturns true if vid/pid matches.\ntypeAdapter<\/p>\n"
                      }]
                    }
                  },
                  "ownPages": [{
                    "reference": {
                      "path": "javadoc",
                      "baseUrl": "/JacquardSDKAndroid",
                      "fileName": "com/google/android/jacquard/sdk/dfu",
                      "extension": "html",
                      "usePrettyUrl": true,
                      "link": "/JacquardSDKAndroid/javadoc/com/google/android/jacquard/sdk/dfu"
                    },
                    "description": "",
                    "title": "com.google.android.jacquard.sdk.dfu",
                    "content": "<p>DfuManager\nInterface for device firmware update of connect Jacquard tag.\nFirmwareUpdateState\nThe states of FirmwareUpdateStateMachine .\nFirmwareUpdateState.Type<\/p>\n<p>DfuManagerImpl\nConcrete implementation of DfuManager .\nDFUInfo\nRepresents Image information.\nDFUInfo.UpgradeStatus\nSet of dfu upgrade status.\ncom.google.android.jacquard.sdk.dfu.execption<\/p>\n<p>com.google.android.jacquard.sdk.dfu.model<\/p>\n"
                  }]
                },
                "util": {
                  "ownKey": "util",
                  "childrenPages": {
                    "stringutils": {
                      "ownKey": "stringutils",
                      "ownPages": [{
                        "reference": {
                          "path": "javadoc",
                          "baseUrl": "/JacquardSDKAndroid",
                          "fileName": "com/google/android/jacquard/sdk/util/stringutils",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "/JacquardSDKAndroid/javadoc/com/google/android/jacquard/sdk/util/stringutils"
                        },
                        "description": "",
                        "title": "StringUtils",
                        "content": "<p>Util class with methods related to string.getInstance\nReturns instance of StringUtils.\nintegerToHexString\nConverts Integer to '-' separated Hex string.\nhexStringToInteger\nConverts '-' separated Hex String to Integer.\nsha1\nCalculates SHA of the text.<\/p>\n"
                      }]
                    },
                    "bluetoothutils": {
                      "ownKey": "bluetoothutils",
                      "ownPages": [{
                        "reference": {
                          "path": "javadoc",
                          "baseUrl": "/JacquardSDKAndroid",
                          "fileName": "com/google/android/jacquard/sdk/util/bluetoothutils",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "/JacquardSDKAndroid/javadoc/com/google/android/jacquard/sdk/util/bluetoothutils"
                        },
                        "description": "",
                        "title": "BluetoothUtils",
                        "content": "<p>Holds utility methods for checking the state of the BluetoothAdapter .BluetoothUtils<\/p>\n<p>isBluetoothEnabled\nReturns true if the BluetoothAdapter is available and turned on.<\/p>\n"
                      }]
                    },
                    "jqutils": {
                      "ownKey": "jqutils",
                      "ownPages": [{
                        "reference": {
                          "path": "javadoc",
                          "baseUrl": "/JacquardSDKAndroid",
                          "fileName": "com/google/android/jacquard/sdk/util/jqutils",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "/JacquardSDKAndroid/javadoc/com/google/android/jacquard/sdk/util/jqutils"
                        },
                        "description": "",
                        "title": "JQUtils",
                        "content": "<p>Class for utility apis.JQUtils<\/p>\n<p>isValidUrl\nReturns true if input strig is valid url. False otherwise.\ngetNotification\nReturns Notification object of provided byte data.<\/p>\n"
                      }]
                    },
                    "bluetoothsig": {
                      "ownKey": "bluetoothsig",
                      "ownPages": [{
                        "reference": {
                          "path": "javadoc",
                          "baseUrl": "/JacquardSDKAndroid",
                          "fileName": "com/google/android/jacquard/sdk/util/bluetoothsig",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "/JacquardSDKAndroid/javadoc/com/google/android/jacquard/sdk/util/bluetoothsig"
                        },
                        "description": "",
                        "title": "BluetoothSig",
                        "content": "<p>A representation of GATT services assigned by the Bluetooth SIG<\/p>\n <p>values from https://www.bluetooth.com/specifications/gatt/servicesSERVICE_GENERIC_ACCESS\n\nSERVICE_BATTERY_SERVICE\n\nCHARACTERISTIC_GAP_DEVICE_NAME\n\nCHARACTERISTIC_BATTERY_LEVEL\n\nJQ_SERVICE_2\n\nJQ_MFG_ID\n\nRESPONSE_UUID\n\nNOTIFY_UUID\n\nRAW_UUID\n\nJQ_CHARACTERISTIC_COMMAND\n\nJQ_CHARACTERISTIC_RESPONSE\n\nJQ_CHARACTERISTIC_NOTIFICATION\n\nJQ_RAW_CHARACTERISTIC\n\nDESCRIPTOR_CLIENT_CHARACTERISTIC_CONFIGURATION\n\n"
                      }]
                    },
                    "lists": {
                      "ownKey": "lists",
                      "childrenPages": {"unmodifiablelistbuilder": {
                        "ownKey": "unmodifiablelistbuilder",
                        "ownPages": [{
                          "reference": {
                            "path": "javadoc",
                            "baseUrl": "/JacquardSDKAndroid",
                            "fileName": "com/google/android/jacquard/sdk/util/lists/unmodifiablelistbuilder",
                            "extension": "html",
                            "usePrettyUrl": true,
                            "link": "/JacquardSDKAndroid/javadoc/com/google/android/jacquard/sdk/util/lists/unmodifiablelistbuilder"
                          },
                          "description": "",
                          "title": "Lists.UnmodifiableListBuilder",
                          "content": "<p>Builder for an unmodifiable list.UnmodifiableListBuilder<\/p>\n<p>add\nAppends the specified element to the end of this list.\nbuild\nReturns an unmodifiable list of elements.<\/p>\n"
                        }]
                      }},
                      "ownPages": [{
                        "reference": {
                          "path": "javadoc",
                          "baseUrl": "/JacquardSDKAndroid",
                          "fileName": "com/google/android/jacquard/sdk/util/lists",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "/JacquardSDKAndroid/javadoc/com/google/android/jacquard/sdk/util/lists"
                        },
                        "description": "",
                        "title": "Lists",
                        "content": "<p>Helper function for list operations.unmodifiableCopyOf\nReturns an unmodifiable copy of the array.\nunmodifiableCopyOf\nReturns an unmodifiable copy of the list.\nunmodifiableListOf\nReturns an unmodifiable list of elements.<\/p>\n"
                      }]
                    },
                    "sdktypeadapterfactory": {
                      "ownKey": "sdktypeadapterfactory",
                      "ownPages": [{
                        "reference": {
                          "path": "javadoc",
                          "baseUrl": "/JacquardSDKAndroid",
                          "fileName": "com/google/android/jacquard/sdk/util/sdktypeadapterfactory",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "/JacquardSDKAndroid/javadoc/com/google/android/jacquard/sdk/util/sdktypeadapterfactory"
                        },
                        "description": "",
                        "title": "SdkTypeAdapterFactory",
                        "content": "<p>TypeFactory for all serializable auto values.SdkTypeAdapterFactory<\/p>\n<p>create<\/p>\n<p>gson<\/p>\n<p>runtimeGsonTypeAdapterFactory<\/p>\n"
                      }]
                    },
                    "function": {
                      "ownKey": "function",
                      "ownPages": [{
                        "reference": {
                          "path": "javadoc",
                          "baseUrl": "/JacquardSDKAndroid",
                          "fileName": "com/google/android/jacquard/sdk/util/function",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "/JacquardSDKAndroid/javadoc/com/google/android/jacquard/sdk/util/function"
                        },
                        "description": "",
                        "title": "Function",
                        "content": "<p>Represents a function that accepts one argument and does not produces a result.<\/p>\n <p>This is a functional interface whose functional method is Function .run\nExecute the function.\n"
                      }]
                    },
                    "objects": {
                      "ownKey": "objects",
                      "ownPages": [{
                        "reference": {
                          "path": "javadoc",
                          "baseUrl": "/JacquardSDKAndroid",
                          "fileName": "com/google/android/jacquard/sdk/util/objects",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "/JacquardSDKAndroid/javadoc/com/google/android/jacquard/sdk/util/objects"
                        },
                        "description": "",
                        "title": "Objects",
                        "content": "<p>Helper functions for Objects.nonNull\nReturns true if the provided reference is non- null otherwise returns false .\ncheckNotNull\nEnsures that an object reference passed as a parameter to the calling method is not null.<\/p>\n"
                      }]
                    },
                    "filelogger": {
                      "ownKey": "filelogger",
                      "ownPages": [{
                        "reference": {
                          "path": "javadoc",
                          "baseUrl": "/JacquardSDKAndroid",
                          "fileName": "com/google/android/jacquard/sdk/util/filelogger",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "/JacquardSDKAndroid/javadoc/com/google/android/jacquard/sdk/util/filelogger"
                        },
                        "description": "",
                        "title": "FileLogger",
                        "content": "<p>Wrapper to save data to file.FileLogger\nPublic constructor. Make sure to have write permission to target directory.\nFileLogger\ne\nPublic constructor. Make sure to have write permission to target directory.\nlog\nAppends data to end of the target file.\ndone\nFlushes the buffer and releases the resources.\ngetFile\nReturns destination file.<\/p>\n"
                      }]
                    },
                    "fragmenter": {
                      "ownKey": "fragmenter",
                      "childrenPages": {"varint": {
                        "ownKey": "varint",
                        "ownPages": [{
                          "reference": {
                            "path": "javadoc",
                            "baseUrl": "/JacquardSDKAndroid",
                            "fileName": "com/google/android/jacquard/sdk/util/fragmenter/varint",
                            "extension": "html",
                            "usePrettyUrl": true,
                            "link": "/JacquardSDKAndroid/javadoc/com/google/android/jacquard/sdk/util/fragmenter/varint"
                          },
                          "description": "",
                          "title": "Fragmenter.VarInt",
                          "content": "<p>Class for parsing/generating protocol buffer compatible VarInts.data<\/p>\n<p>value<\/p>\n<p>length<\/p>\n<p>VarInt<\/p>\n<p>VarInt<\/p>\n"
                        }]
                      }},
                      "ownPages": [{
                        "reference": {
                          "path": "javadoc",
                          "baseUrl": "/JacquardSDKAndroid",
                          "fileName": "com/google/android/jacquard/sdk/util/fragmenter",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "/JacquardSDKAndroid/javadoc/com/google/android/jacquard/sdk/util/fragmenter"
                        },
                        "description": "",
                        "title": "Fragmenter",
                        "content": "<p>Class for decomposing and decoding byte data received from the jacquard tag.Fragmenter<\/p>\n<p>fragmentData\nDecomposes a message into fragments.\ndecodeFragment\nDecodes a message fragment returning the message if it is complete.<\/p>\n <p>Note: This method will validate the fragment number and message length. If fragments are\n received out of sequence of the final message size does not match the reported size, then the\n message state will be reset.\nreset\nResets the message state.\n"
                      }]
                    }
                  },
                  "ownPages": [{
                    "reference": {
                      "path": "javadoc",
                      "baseUrl": "/JacquardSDKAndroid",
                      "fileName": "com/google/android/jacquard/sdk/util",
                      "extension": "html",
                      "usePrettyUrl": true,
                      "link": "/JacquardSDKAndroid/javadoc/com/google/android/jacquard/sdk/util"
                    },
                    "description": "",
                    "title": "com.google.android.jacquard.sdk.util",
                    "content": "<p>Function\nRepresents a function that accepts one argument and does not produces a result.<\/p>\n <p>This is a functional interface whose functional method is Function .\nBluetoothUtils\nHolds utility methods for checking the state of the BluetoothAdapter .\nJQUtils\nClass for utility apis.\nFragmenter\nClass for decomposing and decoding byte data received from the jacquard tag.\nFragmenter.VarInt\nClass for parsing/generating protocol buffer compatible VarInts.\nSdkTypeAdapterFactory\nTypeFactory for all serializable auto values.\nBluetoothSig\nA representation of GATT services assigned by the Bluetooth SIG\n\n <p>values from https://www.bluetooth.com/specifications/gatt/services\nLists\nHelper function for list operations.\nLists.UnmodifiableListBuilder\nBuilder for an unmodifiable list.\nFileLogger\nWrapper to save data to file.\nObjects\nHelper functions for Objects.\nStringUtils\nUtil class with methods related to string.\n"
                  }]
                },
                "pairing": {
                  "ownKey": "pairing",
                  "childrenPages": {
                    "tagpairingevent": {
                      "ownKey": "tagpairingevent",
                      "childrenPages": {"type": {
                        "ownKey": "type",
                        "ownPages": [{
                          "reference": {
                            "path": "javadoc",
                            "baseUrl": "/JacquardSDKAndroid",
                            "fileName": "com/google/android/jacquard/sdk/pairing/tagpairingevent/type",
                            "extension": "html",
                            "usePrettyUrl": true,
                            "link": "/JacquardSDKAndroid/javadoc/com/google/android/jacquard/sdk/pairing/tagpairingevent/type"
                          },
                          "description": "",
                          "title": "TagPairingEvent.Type",
                          "content": "<p>CONNECTED<\/p>\n<p>FAILED_TO_CONNECT<\/p>\n<p>MISC_CORE_BLUETOOTH_ERROR<\/p>\n<p>SERVICES_DISCOVERED<\/p>\n<p>NOTIFICATION_STATE_UPDATED<\/p>\n<p>values<\/p>\n<p>valueOf<\/p>\n"
                        }]
                      }},
                      "ownPages": [{
                        "reference": {
                          "path": "javadoc",
                          "baseUrl": "/JacquardSDKAndroid",
                          "fileName": "com/google/android/jacquard/sdk/pairing/tagpairingevent",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "/JacquardSDKAndroid/javadoc/com/google/android/jacquard/sdk/pairing/tagpairingevent"
                        },
                        "description": "",
                        "title": "TagPairingEvent",
                        "content": "<p>The types of events that TagPairingStateMachine reacts to.TagPairingEvent<\/p>\n<p>ofConnected<\/p>\n<p>ofFailedToConnect<\/p>\n<p>ofMiscCoreBluetoothError<\/p>\n<p>ofServicesDiscovered<\/p>\n<p>ofNotificationStateUpdated<\/p>\n<p>getType<\/p>\n<p>connected<\/p>\n<p>failedToConnect<\/p>\n<p>miscCoreBluetoothError<\/p>\n<p>notificationStateUpdated<\/p>\n<p>servicesDiscovered<\/p>\n"
                      }]
                    },
                    "tagpairingstatemachine": {
                      "ownKey": "tagpairingstatemachine",
                      "ownPages": [{
                        "reference": {
                          "path": "javadoc",
                          "baseUrl": "/JacquardSDKAndroid",
                          "fileName": "com/google/android/jacquard/sdk/pairing/tagpairingstatemachine",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "/JacquardSDKAndroid/javadoc/com/google/android/jacquard/sdk/pairing/tagpairingstatemachine"
                        },
                        "description": "",
                        "title": "TagPairingStateMachine",
                        "content": "<p>State machine for managing state during the pairing phase.TagPairingStateMachine\nConstructs a new instance.\ngetState<\/p>\n<p>onStateEvent<\/p>\n<p>destroy<\/p>\n"
                      }]
                    },
                    "tagpairingstate": {
                      "ownKey": "tagpairingstate",
                      "childrenPages": {"type": {
                        "ownKey": "type",
                        "ownPages": [{
                          "reference": {
                            "path": "javadoc",
                            "baseUrl": "/JacquardSDKAndroid",
                            "fileName": "com/google/android/jacquard/sdk/pairing/tagpairingstate/type",
                            "extension": "html",
                            "usePrettyUrl": true,
                            "link": "/JacquardSDKAndroid/javadoc/com/google/android/jacquard/sdk/pairing/tagpairingstate/type"
                          },
                          "description": "",
                          "title": "TagPairingState.Type",
                          "content": "<p>PREPARING_TO_CONNECT<\/p>\n<p>DISCONNECTED<\/p>\n<p>BLUETOOTH_CONNECTED<\/p>\n<p>SERVICES_DISCOVERED<\/p>\n<p>AWAITING_NOTIFICATION_UPDATES<\/p>\n<p>TAG_PAIRED<\/p>\n<p>ERROR<\/p>\n<p>values<\/p>\n<p>valueOf<\/p>\n"
                        }]
                      }},
                      "ownPages": [{
                        "reference": {
                          "path": "javadoc",
                          "baseUrl": "/JacquardSDKAndroid",
                          "fileName": "com/google/android/jacquard/sdk/pairing/tagpairingstate",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "/JacquardSDKAndroid/javadoc/com/google/android/jacquard/sdk/pairing/tagpairingstate"
                        },
                        "description": "",
                        "title": "TagPairingState",
                        "content": "<p>The states the Pairing state machine can be in.TagPairingState<\/p>\n<p>ofPreparingToConnect<\/p>\n<p>ofDisconnected<\/p>\n<p>ofBluetoothConnected<\/p>\n<p>ofAwaitingNotificationUpdates<\/p>\n<p>ofServicesDiscovered<\/p>\n<p>ofError<\/p>\n<p>ofTagPaired<\/p>\n<p>getType<\/p>\n<p>isTerminal<\/p>\n<p>preparingToConnect<\/p>\n<p>disconnected<\/p>\n<p>bluetoothConnected<\/p>\n<p>servicesDiscovered<\/p>\n<p>awaitingNotificationUpdates<\/p>\n<p>tagPaired<\/p>\n<p>error<\/p>\n"
                      }]
                    },
                    "requiredcharacteristics": {
                      "ownKey": "requiredcharacteristics",
                      "ownPages": [{
                        "reference": {
                          "path": "javadoc",
                          "baseUrl": "/JacquardSDKAndroid",
                          "fileName": "com/google/android/jacquard/sdk/pairing/requiredcharacteristics",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "/JacquardSDKAndroid/javadoc/com/google/android/jacquard/sdk/pairing/requiredcharacteristics"
                        },
                        "description": "",
                        "title": "RequiredCharacteristics",
                        "content": "<p>Data class for holding the required characteristic for a jacquard tag.commandCharacteristic<\/p>\n<p>rawCharacteristic<\/p>\n<p>RequiredCharacteristics<\/p>\n"
                      }]
                    }
                  },
                  "ownPages": [{
                    "reference": {
                      "path": "javadoc",
                      "baseUrl": "/JacquardSDKAndroid",
                      "fileName": "com/google/android/jacquard/sdk/pairing",
                      "extension": "html",
                      "usePrettyUrl": true,
                      "link": "/JacquardSDKAndroid/javadoc/com/google/android/jacquard/sdk/pairing"
                    },
                    "description": "",
                    "title": "com.google.android.jacquard.sdk.pairing",
                    "content": "<p>TagPairingStateMachine\nState machine for managing state during the pairing phase.\nTagPairingEvent\nThe types of events that TagPairingStateMachine reacts to.\nTagPairingEvent.Type<\/p>\n<p>RequiredCharacteristics\nData class for holding the required characteristic for a jacquard tag.\nTagPairingState\nThe states the Pairing state machine can be in.\nTagPairingState.Type<\/p>\n"
                  }]
                },
                "initialization": {
                  "ownKey": "initialization",
                  "childrenPages": {
                    "initializationstate": {
                      "ownKey": "initializationstate",
                      "childrenPages": {"type": {
                        "ownKey": "type",
                        "ownPages": [{
                          "reference": {
                            "path": "javadoc",
                            "baseUrl": "/JacquardSDKAndroid",
                            "fileName": "com/google/android/jacquard/sdk/initialization/initializationstate/type",
                            "extension": "html",
                            "usePrettyUrl": true,
                            "link": "/JacquardSDKAndroid/javadoc/com/google/android/jacquard/sdk/initialization/initializationstate/type"
                          },
                          "description": "",
                          "title": "InitializationState.Type",
                          "content": "<p>PAIRED<\/p>\n<p>HELLO_SENT<\/p>\n<p>BEGIN_SENT<\/p>\n<p>COMPONENT_INFO_SENT<\/p>\n<p>CREATING_TAG_INSTANCE<\/p>\n<p>TAG_INITIALIZED<\/p>\n<p>ERROR<\/p>\n<p>values<\/p>\n<p>valueOf<\/p>\n"
                        }]
                      }},
                      "ownPages": [{
                        "reference": {
                          "path": "javadoc",
                          "baseUrl": "/JacquardSDKAndroid",
                          "fileName": "com/google/android/jacquard/sdk/initialization/initializationstate",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "/JacquardSDKAndroid/javadoc/com/google/android/jacquard/sdk/initialization/initializationstate"
                        },
                        "description": "",
                        "title": "InitializationState",
                        "content": "<p>The states of ProtocolInitializationStateMachine .InitializationState<\/p>\n<p>isTerminal<\/p>\n<p>isType<\/p>\n<p>getType<\/p>\n<p>paired<\/p>\n<p>helloSent<\/p>\n<p>beginSent<\/p>\n<p>componentInfoSent<\/p>\n<p>creatingTagInstance<\/p>\n<p>tagInitialized<\/p>\n<p>error<\/p>\n<p>ofPaired<\/p>\n<p>ofError<\/p>\n<p>ofHelloSent<\/p>\n<p>ofBeginSent<\/p>\n<p>ofComponentInfoSent<\/p>\n<p>ofTagInitialized<\/p>\n<p>ofCreatingTagInstance<\/p>\n"
                      }]
                    },
                    "protocolinitializationstatemachine": {
                      "ownKey": "protocolinitializationstatemachine",
                      "ownPages": [{
                        "reference": {
                          "path": "javadoc",
                          "baseUrl": "/JacquardSDKAndroid",
                          "fileName": "com/google/android/jacquard/sdk/initialization/protocolinitializationstatemachine",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "/JacquardSDKAndroid/javadoc/com/google/android/jacquard/sdk/initialization/protocolinitializationstatemachine"
                        },
                        "description": "",
                        "title": "ProtocolInitializationStateMachine",
                        "content": "<p>State machine for handling the protocol initialization phase.ProtocolInitializationStateMachine\nCreates a new instance of ProtocolInitializationStateMachine.\ngetState<\/p>\n<p>onStateEvent<\/p>\n<p>startNegotiation\nStarts negotiation with the tag.\ndestroy<\/p>\n"
                      }]
                    },
                    "initializationevent": {
                      "ownKey": "initializationevent",
                      "childrenPages": {"type": {
                        "ownKey": "type",
                        "ownPages": [{
                          "reference": {
                            "path": "javadoc",
                            "baseUrl": "/JacquardSDKAndroid",
                            "fileName": "com/google/android/jacquard/sdk/initialization/initializationevent/type",
                            "extension": "html",
                            "usePrettyUrl": true,
                            "link": "/JacquardSDKAndroid/javadoc/com/google/android/jacquard/sdk/initialization/initializationevent/type"
                          },
                          "description": "",
                          "title": "InitializationEvent.Type",
                          "content": "<p>START_NEGOTIATION<\/p>\n<p>VALUE_WRITTEN<\/p>\n<p>RECEIVED_RESPONSE<\/p>\n<p>RECEIVED_RESPONSE_WITH_ERROR<\/p>\n<p>CREATED_CONNECTED_TAG_INSTANCE<\/p>\n<p>values<\/p>\n<p>valueOf<\/p>\n"
                        }]
                      }},
                      "ownPages": [{
                        "reference": {
                          "path": "javadoc",
                          "baseUrl": "/JacquardSDKAndroid",
                          "fileName": "com/google/android/jacquard/sdk/initialization/initializationevent",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "/JacquardSDKAndroid/javadoc/com/google/android/jacquard/sdk/initialization/initializationevent"
                        },
                        "description": "",
                        "title": "InitializationEvent",
                        "content": "<p>The types of events that ProtocolInitializationStateMachine reacts to.InitializationEvent<\/p>\n<p>getType<\/p>\n<p>startNegotiation<\/p>\n<p>valueWritten<\/p>\n<p>receivedResponse<\/p>\n<p>receivedResponseWithError<\/p>\n<p>createdConnectedTagInstance<\/p>\n<p>ofCreatedConnectedTagInstance<\/p>\n<p>ofStartNegotiation<\/p>\n<p>ofReceivedResponse<\/p>\n<p>ofReceivedResponseWithError<\/p>\n<p>ofValueWritten<\/p>\n"
                      }]
                    },
                    "transport": {
                      "ownKey": "transport",
                      "ownPages": [{
                        "reference": {
                          "path": "javadoc",
                          "baseUrl": "/JacquardSDKAndroid",
                          "fileName": "com/google/android/jacquard/sdk/initialization/transport",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "/JacquardSDKAndroid/javadoc/com/google/android/jacquard/sdk/initialization/transport"
                        },
                        "description": "",
                        "title": "Transport",
                        "content": "<p>Class for managing request and notification flowing in and out of the tag.DEFAULT_TIMEOUT\nDefault timeout duration for ble commands.\ngetPeripheralIdentifier\nReturns the identifier for the peripheral.\ngetDefaultDisplayName\nReturns the of the peripheral from ble cache.\ngetNotificationSignal\nReturns a Signal emitting notification from the peripheral.\ngetValueWrittenSignal\nSignal emitting when values are written to the peripheral.\ngetDataTransport\nReturns a signal emitting data received on ujt data channel.\nvalueWritten\nCallback reporting the result of a write operation.\ncharacteristicUpdated\nNotify or response the updated characteristic.\ngetPendingRequestSize\nReturns pending requests count.\nrequestConnectionPriority\nThis function will send a connection parameter update request to the remote device.\nonRSSIValueUpdated\nNotify the requested rssi value for the ujt.\nfetchRSSIValue\nFetch the current tag's signal strength (i.e. rssi value).\nstopRSSIValue\nStop fetching current tag's signal strength (i.e. rssi value).\ngetRawData<\/p>\n<p>enqueue\nEnqueues a request to be send to the peripheral.\nenqueue\nEnqueues a request to be send to the peripheral.\ngetAckSignal\nReturns a signal to receive ack packets sent by ujt.\nsendData\nSends data to UJT.<\/p>\n"
                      }]
                    },
                    "command": {
                      "ownKey": "command",
                      "childrenPages": {
                        "hellocommand": {
                          "ownKey": "hellocommand",
                          "ownPages": [{
                            "reference": {
                              "path": "javadoc",
                              "baseUrl": "/JacquardSDKAndroid",
                              "fileName": "com/google/android/jacquard/sdk/initialization/command/hellocommand",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "/JacquardSDKAndroid/javadoc/com/google/android/jacquard/sdk/initialization/command/hellocommand"
                            },
                            "description": "",
                            "title": "HelloCommand",
                            "content": "<p>Command to send hello command to ujt.HelloCommand<\/p>\n<p>parseResponse<\/p>\n<p>getRequest<\/p>\n"
                          }]
                        },
                        "begincommand": {
                          "ownKey": "begincommand",
                          "ownPages": [{
                            "reference": {
                              "path": "javadoc",
                              "baseUrl": "/JacquardSDKAndroid",
                              "fileName": "com/google/android/jacquard/sdk/initialization/command/begincommand",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "/JacquardSDKAndroid/javadoc/com/google/android/jacquard/sdk/initialization/command/begincommand"
                            },
                            "description": "",
                            "title": "BeginCommand",
                            "content": "<p>Command to send Begin request to ujt.BeginCommand<\/p>\n<p>parseResponse<\/p>\n<p>getRequest<\/p>\n"
                          }]
                        },
                        "deviceinfocommand": {
                          "ownKey": "deviceinfocommand",
                          "ownPages": [{
                            "reference": {
                              "path": "javadoc",
                              "baseUrl": "/JacquardSDKAndroid",
                              "fileName": "com/google/android/jacquard/sdk/initialization/command/deviceinfocommand",
                              "extension": "html",
                              "usePrettyUrl": true,
                              "link": "/JacquardSDKAndroid/javadoc/com/google/android/jacquard/sdk/initialization/command/deviceinfocommand"
                            },
                            "description": "",
                            "title": "DeviceInfoCommand",
                            "content": "<p>Command to send device info request to ujt.DeviceInfoCommand<\/p>\n<p>parseResponse<\/p>\n<p>getRequest<\/p>\n"
                          }]
                        }
                      },
                      "ownPages": [{
                        "reference": {
                          "path": "javadoc",
                          "baseUrl": "/JacquardSDKAndroid",
                          "fileName": "com/google/android/jacquard/sdk/initialization/command",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "/JacquardSDKAndroid/javadoc/com/google/android/jacquard/sdk/initialization/command"
                        },
                        "description": "",
                        "title": "com.google.android.jacquard.sdk.initialization.command",
                        "content": "<p>DeviceInfoCommand\nCommand to send device info request to ujt.\nBeginCommand\nCommand to send Begin request to ujt.\nHelloCommand\nCommand to send hello command to ujt.<\/p>\n"
                      }]
                    }
                  },
                  "ownPages": [{
                    "reference": {
                      "path": "javadoc",
                      "baseUrl": "/JacquardSDKAndroid",
                      "fileName": "com/google/android/jacquard/sdk/initialization",
                      "extension": "html",
                      "usePrettyUrl": true,
                      "link": "/JacquardSDKAndroid/javadoc/com/google/android/jacquard/sdk/initialization"
                    },
                    "description": "",
                    "title": "com.google.android.jacquard.sdk.initialization",
                    "content": "<p>InitializationEvent\nThe types of events that ProtocolInitializationStateMachine reacts to.\nInitializationEvent.Type<\/p>\n<p>InitializationState\nThe states of ProtocolInitializationStateMachine .\nInitializationState.Type<\/p>\n<p>Transport\nClass for managing request and notification flowing in and out of the tag.\nProtocolInitializationStateMachine\nState machine for handling the protocol initialization phase.\ncom.google.android.jacquard.sdk.initialization.command<\/p>\n"
                  }]
                },
                "connection": {
                  "ownKey": "connection",
                  "childrenPages": {
                    "result": {
                      "ownKey": "result",
                      "childrenPages": {"type": {
                        "ownKey": "type",
                        "ownPages": [{
                          "reference": {
                            "path": "javadoc",
                            "baseUrl": "/JacquardSDKAndroid",
                            "fileName": "com/google/android/jacquard/sdk/connection/result/type",
                            "extension": "html",
                            "usePrettyUrl": true,
                            "link": "/JacquardSDKAndroid/javadoc/com/google/android/jacquard/sdk/connection/result/type"
                          },
                          "description": "",
                          "title": "Result.Type",
                          "content": "<p>SUCCESS<\/p>\n<p>FAILURE<\/p>\n<p>values<\/p>\n<p>valueOf<\/p>\n"
                        }]
                      }},
                      "ownPages": [{
                        "reference": {
                          "path": "javadoc",
                          "baseUrl": "/JacquardSDKAndroid",
                          "fileName": "com/google/android/jacquard/sdk/connection/result",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "/JacquardSDKAndroid/javadoc/com/google/android/jacquard/sdk/connection/result"
                        },
                        "description": "",
                        "title": "Result",
                        "content": "<p>Data class for holding the result of a tag command.Result<\/p>\n<p>getType<\/p>\n<p>success<\/p>\n<p>failure<\/p>\n<p>ofSuccess<\/p>\n<p>ofFailure<\/p>\n"
                      }]
                    },
                    "connectionevent": {
                      "ownKey": "connectionevent",
                      "childrenPages": {"type": {
                        "ownKey": "type",
                        "ownPages": [{
                          "reference": {
                            "path": "javadoc",
                            "baseUrl": "/JacquardSDKAndroid",
                            "fileName": "com/google/android/jacquard/sdk/connection/connectionevent/type",
                            "extension": "html",
                            "usePrettyUrl": true,
                            "link": "/JacquardSDKAndroid/javadoc/com/google/android/jacquard/sdk/connection/connectionevent/type"
                          },
                          "description": "",
                          "title": "ConnectionEvent.Type",
                          "content": "<p>CONNECTION_ERROR<\/p>\n<p>CONNECTION_PROGRESS<\/p>\n<p>INITIALIZATION_PROGRESS<\/p>\n<p>TAG_PAIRED<\/p>\n<p>TAG_INITIALIZED<\/p>\n<p>TAG_CONFIGURED<\/p>\n<p>FIRMWARE_UPDATE_INITIATED<\/p>\n<p>FIRMWARE_UPDATE_ERROR<\/p>\n<p>FIRMWARE_TRANSFERRING<\/p>\n<p>FIRMWARE_EXECUTING<\/p>\n<p>FIRMWARE_TRANSFER_COMPLETE<\/p>\n<p>TAG_DISCONNECTED<\/p>\n<p>values<\/p>\n<p>valueOf<\/p>\n"
                        }]
                      }},
                      "ownPages": [{
                        "reference": {
                          "path": "javadoc",
                          "baseUrl": "/JacquardSDKAndroid",
                          "fileName": "com/google/android/jacquard/sdk/connection/connectionevent",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "/JacquardSDKAndroid/javadoc/com/google/android/jacquard/sdk/connection/connectionevent"
                        },
                        "description": "",
                        "title": "ConnectionEvent",
                        "content": "<p>The events used internally in TagConnectionStateMachine .ConnectionEvent<\/p>\n<p>ofConnectionError<\/p>\n<p>ofConnectionProgress<\/p>\n<p>ofInitializationProgress<\/p>\n<p>ofTagPaired<\/p>\n<p>ofTagInitialized<\/p>\n<p>ofTagConfigured<\/p>\n<p>ofTagDisconnected<\/p>\n<p>ofFirmwareTransferring<\/p>\n<p>ofFirmwareExecuting<\/p>\n<p>ofFirmwareTransferComplete<\/p>\n<p>ofFirmwareUpdateInitiated<\/p>\n<p>ofFirmwareUpdateError<\/p>\n<p>getType<\/p>\n<p>connectionError<\/p>\n<p>connectionProgress<\/p>\n<p>initializationProgress<\/p>\n<p>tagPaired<\/p>\n<p>tagInitialized<\/p>\n<p>tagConfigured<\/p>\n<p>tagDisconnected<\/p>\n<p>firmwareUpdateInitiated<\/p>\n<p>firmwareTransferring\nInitiates firmware upload process\nfirmwareExecuting\nInitiates firmware execution process. This will disconnect the tag, once commands to execute\nthe firmware sent to the Tag.\nfirmwareTransferComplete\nIndicates Firmware update process is completed.\nfirmwareUpdateError<\/p>\n"
                      }]
                    },
                    "connectionstate": {
                      "ownKey": "connectionstate",
                      "childrenPages": {"type": {
                        "ownKey": "type",
                        "ownPages": [{
                          "reference": {
                            "path": "javadoc",
                            "baseUrl": "/JacquardSDKAndroid",
                            "fileName": "com/google/android/jacquard/sdk/connection/connectionstate/type",
                            "extension": "html",
                            "usePrettyUrl": true,
                            "link": "/JacquardSDKAndroid/javadoc/com/google/android/jacquard/sdk/connection/connectionstate/type"
                          },
                          "description": "",
                          "title": "ConnectionState.Type",
                          "content": "<p>PREPARING_TO_CONNECT<\/p>\n<p>CONNECTING<\/p>\n<p>INITIALIZING<\/p>\n<p>CONFIGURING<\/p>\n<p>CONNECTED<\/p>\n<p>DISCONNECTED<\/p>\n<p>FIRMWARE_UPDATE_INITIATED<\/p>\n<p>FIRMWARE_TRANSFERRING<\/p>\n<p>FIRMWARE_EXECUTING<\/p>\n<p>FIRMWARE_TRANSFER_COMPLETE<\/p>\n<p>values<\/p>\n<p>valueOf<\/p>\n"
                        }]
                      }},
                      "ownPages": [{
                        "reference": {
                          "path": "javadoc",
                          "baseUrl": "/JacquardSDKAndroid",
                          "fileName": "com/google/android/jacquard/sdk/connection/connectionstate",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "/JacquardSDKAndroid/javadoc/com/google/android/jacquard/sdk/connection/connectionstate"
                        },
                        "description": "",
                        "title": "ConnectionState",
                        "content": "<p>The different states on the connection process.ConnectionState<\/p>\n<p>isTerminal<\/p>\n<p>isType<\/p>\n<p>getType<\/p>\n<p>preparingToConnect\nThis is initial state, and also the state while waiting for reconnection.\nconnecting\nConnecting with approximate progress.\ninitializing\nInitializing with approximate progress.\nThe progress continues on from the progress reported by the <code>connecting<\/code> state.\nconfiguring\nConfiguring with approximate progress.\nThe progress continues on from the progress reported by the <code>initializing<\/code> state.\nfirmwareUpdateInitiated\nInitiating Firmware update process\nfirmwareTransferring\nInitiates firmware upload process\nfirmwareExecuting\nInitiates firmware execution process. This will disconnect the tag, once commands to execute\nthe firmware sent to the Tag.\nfirmwareTransferComplete\nIndicates Firmware update process is completed.\nconnected\nreturns the connected tag ready to use.\nNote this is not a terminal state - the stream may ho back to disconnected, and then\nsubsequently reconnect again.\ndisconnected\nThis terminal state will only be reached if reconnecting or retrying is not possible.\nofPreparingToConnect<\/p>\n<p>ofConnecting<\/p>\n<p>ofInitializing<\/p>\n<p>ofConfiguring<\/p>\n<p>ofConnected<\/p>\n<p>ofDisconnected<\/p>\n<p>ofFirmwareUpdateInitiated<\/p>\n<p>ofFirmwareTransferring<\/p>\n<p>ofFirmwareExecuting<\/p>\n<p>ofFirmwareTransferComplete<\/p>\n"
                      }]
                    },
                    "tagconnectionstatemachine": {
                      "ownKey": "tagconnectionstatemachine",
                      "ownPages": [{
                        "reference": {
                          "path": "javadoc",
                          "baseUrl": "/JacquardSDKAndroid",
                          "fileName": "com/google/android/jacquard/sdk/connection/tagconnectionstatemachine",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "/JacquardSDKAndroid/javadoc/com/google/android/jacquard/sdk/connection/tagconnectionstatemachine"
                        },
                        "description": "",
                        "title": "TagConnectionStateMachine",
                        "content": "<p>A state machine for handling connecting to a tag.\nIt receives events from BleAdapter via TagConnectionStateMachine .\nState changes can be observed via TagConnectionStateMachine .<\/p>\n <p>\n TagConnectionStateMachine has two child state machines.\n First events from onConnectStateEvent are forwarded to a TagPairingStateMachine .\n Once the tag is paired the child will be replaced with a ProtocolInitializationStateMachine .\n TagConnectionStateMachine will emit ConnectionState .\n When the connection has been established the ConnectionState will be emitted with an instance of the\n connected tag.TagConnectionStateMachine\nCreates a new instance of TagConnectionStateMachine.\ngetState\n\nonStateEvent\n\nconnect\nStarts the connection process.\ndestroy\n\n"
                      }]
                    }
                  },
                  "ownPages": [{
                    "reference": {
                      "path": "javadoc",
                      "baseUrl": "/JacquardSDKAndroid",
                      "fileName": "com/google/android/jacquard/sdk/connection",
                      "extension": "html",
                      "usePrettyUrl": true,
                      "link": "/JacquardSDKAndroid/javadoc/com/google/android/jacquard/sdk/connection"
                    },
                    "description": "",
                    "title": "com.google.android.jacquard.sdk.connection",
                    "content": "<p>ConnectionEvent\nThe events used internally in TagConnectionStateMachine .\nConnectionEvent.Type<\/p>\n<p>Result\nData class for holding the result of a tag command.\nResult.Type<\/p>\n<p>TagConnectionStateMachine\nA state machine for handling connecting to a tag.\nIt receives events from BleAdapter via TagConnectionStateMachine .\nState changes can be observed via TagConnectionStateMachine .<\/p>\n <p>\n TagConnectionStateMachine has two child state machines.\n First events from onConnectStateEvent are forwarded to a TagPairingStateMachine .\n Once the tag is paired the child will be replaced with a ProtocolInitializationStateMachine .\n TagConnectionStateMachine will emit ConnectionState .\n When the connection has been established the ConnectionState will be emitted with an instance of the\n connected tag.\nConnectionState\nThe different states on the connection process.\nConnectionState.Type\n\n"
                  }]
                },
                "model": {
                  "ownKey": "model",
                  "childrenPages": {
                    "peripheral": {
                      "ownKey": "peripheral",
                      "childrenPages": {"writetype": {
                        "ownKey": "writetype",
                        "ownPages": [{
                          "reference": {
                            "path": "javadoc",
                            "baseUrl": "/JacquardSDKAndroid",
                            "fileName": "com/google/android/jacquard/sdk/model/peripheral/writetype",
                            "extension": "html",
                            "usePrettyUrl": true,
                            "link": "/JacquardSDKAndroid/javadoc/com/google/android/jacquard/sdk/model/peripheral/writetype"
                          },
                          "description": "",
                          "title": "Peripheral.WriteType",
                          "content": "<p>WriteType describes the type of writes are supported.WITH_RESPONSE\nWrite characteristic and requesting acknowledgement by the remote peripheral\nWITHOUT_RESPONSE\nWrite characteristic without requiring a response by the remote peripheral\nSIGNED\nWrite characteristic including authentication signature\nvalues<\/p>\n<p>valueOf<\/p>\n"
                        }]
                      }},
                      "ownPages": [{
                        "reference": {
                          "path": "javadoc",
                          "baseUrl": "/JacquardSDKAndroid",
                          "fileName": "com/google/android/jacquard/sdk/model/peripheral",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "/JacquardSDKAndroid/javadoc/com/google/android/jacquard/sdk/model/peripheral"
                        },
                        "description": "",
                        "title": "Peripheral",
                        "content": "<p>Wrapper around BluetoothGatt that executes BLE commands using a queue.Peripheral\nCreate a new Peripheral for the provided BluetoothGatt .\nSince we can only do one asynchronous operation at a time we have a command queue to control\nexecution.\nreadCharacteristic\nReads from the characteristic.\nResults are emitted from BleAdapter .\nwriteCharacteristic\nWrites the payload to the BluetoothGattCharacteristic with the WriteType .\nResults are emitted from BleAdapter .\nenableNotification\nEnabled or disabled notifications for the characteristic.\nResults are emitted from BleAdapter .\ndiscoverServices\nStarts discovering services.\nResults are emitted from BleAdapter .\ngetTagIdentifier\nReturns the tags identifier.\ngetDefaultDisplayName\nReturns the tag name from Bluetooth cache.\ngetJacquardService\nReturns the BluetoothGattService for accessing jacquard services.\nrequestRssi<\/p>\n<p>requestConnectionPriority\nSets Bluetooth  connection priority for ble data transfer.<\/p>\n"
                      }]
                    },
                    "componentkey": {
                      "ownKey": "componentkey",
                      "ownPages": [{
                        "reference": {
                          "path": "javadoc",
                          "baseUrl": "/JacquardSDKAndroid",
                          "fileName": "com/google/android/jacquard/sdk/model/componentkey",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "/JacquardSDKAndroid/javadoc/com/google/android/jacquard/sdk/model/componentkey"
                        },
                        "description": "",
                        "title": "ComponentKey",
                        "content": "<p>Acts as a Key to hold list of capabilities, which are assigned to combination of Vendor and\nProduct.ComponentKey<\/p>\n<p>key1\nReturn first key for ComponentKey.\nkey2\nReturn second key for ComponentKey.\nof\nReturn the ComponentKey for the combination of ComponentKey and ComponentKey .<\/p>\n"
                      }]
                    },
                    "product": {
                      "ownKey": "product",
                      "childrenPages": {"capability": {
                        "ownKey": "capability",
                        "ownPages": [{
                          "reference": {
                            "path": "javadoc",
                            "baseUrl": "/JacquardSDKAndroid",
                            "fileName": "com/google/android/jacquard/sdk/model/product/capability",
                            "extension": "html",
                            "usePrettyUrl": true,
                            "link": "/JacquardSDKAndroid/javadoc/com/google/android/jacquard/sdk/model/product/capability"
                          },
                          "description": "",
                          "title": "Product.Capability",
                          "content": "<p>LED\n<code>LED = 0;<\/code>\nGESTURE\n<code>GESTURE = 1;<\/code>\nTOUCH_DATA_STREAM\n<code>TOUCH_DATA_STREAM = 2;<\/code>\nHAPTIC\n<code>HAPTIC = 3;<\/code>\nvalues<\/p>\n<p>valueOf<\/p>\n"
                        }]
                      }},
                      "ownPages": [{
                        "reference": {
                          "path": "javadoc",
                          "baseUrl": "/JacquardSDKAndroid",
                          "fileName": "com/google/android/jacquard/sdk/model/product",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "/JacquardSDKAndroid/javadoc/com/google/android/jacquard/sdk/model/product"
                        },
                        "description": "",
                        "title": "Product",
                        "content": "<p>Defines Product type of the Gear.Product<\/p>\n<p>id\nUnique identifier of the product.\nname\nName of the product.\nimage\nImage of the product.\ncapabilities\nList of supported capabilities for this product.\nof<\/p>\n"
                      }]
                    },
                    "servicesdiscovered": {
                      "ownKey": "servicesdiscovered",
                      "ownPages": [{
                        "reference": {
                          "path": "javadoc",
                          "baseUrl": "/JacquardSDKAndroid",
                          "fileName": "com/google/android/jacquard/sdk/model/servicesdiscovered",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "/JacquardSDKAndroid/javadoc/com/google/android/jacquard/sdk/model/servicesdiscovered"
                        },
                        "description": "",
                        "title": "ServicesDiscovered",
                        "content": "<p>Data class for holding BluetoothGattService discovered for a tag.ServicesDiscovered<\/p>\n<p>of\nCreates a new instance of ServicesDiscovered .\nperipheral\nThe Peripheral the services belong to.\nservices\nList of BluetoothGattService discovered.<\/p>\n"
                      }]
                    },
                    "vidpidmid": {
                      "ownKey": "vidpidmid",
                      "childrenPages": {"builder": {
                        "ownKey": "builder",
                        "ownPages": [{
                          "reference": {
                            "path": "javadoc",
                            "baseUrl": "/JacquardSDKAndroid",
                            "fileName": "com/google/android/jacquard/sdk/model/vidpidmid/builder",
                            "extension": "html",
                            "usePrettyUrl": true,
                            "link": "/JacquardSDKAndroid/javadoc/com/google/android/jacquard/sdk/model/vidpidmid/builder"
                          },
                          "description": "",
                          "title": "VidPidMid.Builder",
                          "content": "<p>Builder for VidPidMidBuilder<\/p>\n<p>vid<\/p>\n<p>pid<\/p>\n<p>mid<\/p>\n<p>build<\/p>\n"
                        }]
                      }},
                      "ownPages": [{
                        "reference": {
                          "path": "javadoc",
                          "baseUrl": "/JacquardSDKAndroid",
                          "fileName": "com/google/android/jacquard/sdk/model/vidpidmid",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "/JacquardSDKAndroid/javadoc/com/google/android/jacquard/sdk/model/vidpidmid"
                        },
                        "description": "",
                        "title": "VidPidMid",
                        "content": "<p>Data class to bundle vendor id, product id &amp; module id together.VidPidMid<\/p>\n<p>vid\nVendor id. Should be in the format xx-xx-xx-xx.\npid\nProduct id. Should be in the format xx-xx-xx-xx.\nmid\nLoadable module id. Should be in the format xx-xx-xx-xx.\nbuilder<\/p>\n"
                      }]
                    },
                    "internalcomponent": {
                      "ownKey": "internalcomponent",
                      "ownPages": [{
                        "reference": {
                          "path": "javadoc",
                          "baseUrl": "/JacquardSDKAndroid",
                          "fileName": "com/google/android/jacquard/sdk/model/internalcomponent",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "/JacquardSDKAndroid/javadoc/com/google/android/jacquard/sdk/model/internalcomponent"
                        },
                        "description": "",
                        "title": "InternalComponent",
                        "content": "<p>Information describing a component.InternalComponent<\/p>\n<p>componentId<\/p>\n<p>domain<\/p>\n<p>vendorId<\/p>\n<p>productId<\/p>\n<p>serialNumber<\/p>\n<p>gearId<\/p>\n<p>vendorName<\/p>\n<p>modelName<\/p>\n<p>sku<\/p>\n<p>revision<\/p>\n<p>hardwareVersion<\/p>\n<p>bootLoaderRevision<\/p>\n<p>vendor<\/p>\n<p>product<\/p>\n<p>isTag<\/p>\n<p>of<\/p>\n<p>compareTo<\/p>\n"
                      }]
                    },
                    "rssiupdate": {
                      "ownKey": "rssiupdate",
                      "ownPages": [{
                        "reference": {
                          "path": "javadoc",
                          "baseUrl": "/JacquardSDKAndroid",
                          "fileName": "com/google/android/jacquard/sdk/model/rssiupdate",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "/JacquardSDKAndroid/javadoc/com/google/android/jacquard/sdk/model/rssiupdate"
                        },
                        "description": "",
                        "title": "RssiUpdate",
                        "content": "<p>Data class emitted by BleAdapter when a read remote rssi\nnotification callback is received.RssiUpdate<\/p>\n<p>of\nCreates a new instance of RssiUpdate.\nperipheral\nThe peripheral that reported the event.\nvalue\nThe rssi value of the bluetooth device.<\/p>\n"
                      }]
                    },
                    "module": {
                      "ownKey": "module",
                      "ownPages": [{
                        "reference": {
                          "path": "javadoc",
                          "baseUrl": "/JacquardSDKAndroid",
                          "fileName": "com/google/android/jacquard/sdk/model/module",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "/JacquardSDKAndroid/javadoc/com/google/android/jacquard/sdk/model/module"
                        },
                        "description": "",
                        "title": "Module",
                        "content": "<p>Model class for loadable module.Module<\/p>\n<p>name<\/p>\n<p>vendorId<\/p>\n<p>productId<\/p>\n<p>moduleId<\/p>\n<p>version<\/p>\n<p>isEnabled<\/p>\n<p>equals<\/p>\n<p>create<\/p>\n<p>create<\/p>\n"
                      }]
                    },
                    "gearstate": {
                      "ownKey": "gearstate",
                      "childrenPages": {"type": {
                        "ownKey": "type",
                        "ownPages": [{
                          "reference": {
                            "path": "javadoc",
                            "baseUrl": "/JacquardSDKAndroid",
                            "fileName": "com/google/android/jacquard/sdk/model/gearstate/type",
                            "extension": "html",
                            "usePrettyUrl": true,
                            "link": "/JacquardSDKAndroid/javadoc/com/google/android/jacquard/sdk/model/gearstate/type"
                          },
                          "description": "",
                          "title": "GearState.Type",
                          "content": "<p>ATTACHED<\/p>\n<p>DETACHED<\/p>\n<p>values<\/p>\n<p>valueOf<\/p>\n"
                        }]
                      }},
                      "ownPages": [{
                        "reference": {
                          "path": "javadoc",
                          "baseUrl": "/JacquardSDKAndroid",
                          "fileName": "com/google/android/jacquard/sdk/model/gearstate",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "/JacquardSDKAndroid/javadoc/com/google/android/jacquard/sdk/model/gearstate"
                        },
                        "description": "",
                        "title": "GearState",
                        "content": "<p>The attached state of a gear.GearState<\/p>\n<p>attached\nReturns the component in attached state.\ngetType<\/p>\n<p>detached<\/p>\n<p>ofAttached<\/p>\n<p>ofDetached<\/p>\n"
                      }]
                    },
                    "gesture": {
                      "ownKey": "gesture",
                      "childrenPages": {"gesturetype": {
                        "ownKey": "gesturetype",
                        "ownPages": [{
                          "reference": {
                            "path": "javadoc",
                            "baseUrl": "/JacquardSDKAndroid",
                            "fileName": "com/google/android/jacquard/sdk/model/gesture/gesturetype",
                            "extension": "html",
                            "usePrettyUrl": true,
                            "link": "/JacquardSDKAndroid/javadoc/com/google/android/jacquard/sdk/model/gesture/gesturetype"
                          },
                          "description": "",
                          "title": "Gesture.GestureType",
                          "content": "<p>NO_INFERENCE<\/p>\n<p>DOUBLE_TAP<\/p>\n<p>BRUSH_IN<\/p>\n<p>BRUSH_OUT<\/p>\n<p>SHORT_COVER<\/p>\n<p>values<\/p>\n<p>valueOf<\/p>\n<p>from\nCreates a GestureType from from an identifier.\ngetId\nIdentifier for the gesture as reported by the tag.\ngetDescription\nA short description of the gesture.<\/p>\n"
                        }]
                      }},
                      "ownPages": [{
                        "reference": {
                          "path": "javadoc",
                          "baseUrl": "/JacquardSDKAndroid",
                          "fileName": "com/google/android/jacquard/sdk/model/gesture",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "/JacquardSDKAndroid/javadoc/com/google/android/jacquard/sdk/model/gesture"
                        },
                        "description": "",
                        "title": "Gesture",
                        "content": "<p>Class describing the different gestures supported by Jacquard.Gesture<\/p>\n<p>gestureType<\/p>\n<p>of<\/p>\n"
                      }]
                    },
                    "revision": {
                      "ownKey": "revision",
                      "ownPages": [{
                        "reference": {
                          "path": "javadoc",
                          "baseUrl": "/JacquardSDKAndroid",
                          "fileName": "com/google/android/jacquard/sdk/model/revision",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "/JacquardSDKAndroid/javadoc/com/google/android/jacquard/sdk/model/revision"
                        },
                        "description": "",
                        "title": "Revision",
                        "content": "<p>Data class for firmware revisions.Revision<\/p>\n<p>create\nCreates a new instance of Revision.\nmajor\nThe major part of the revision.\nminor\nThe minor part of the revision.\nmicro\nThe patch part of the revision.\ncompareTo<\/p>\n<p>toString<\/p>\n<p>toZeroString\nReturns a &quot;%03d%03d%03d&quot; formatted representation of the version number.\nfromZeroString\nParse a zero-padded version string into a Revision\ntypeAdapter<\/p>\n"
                      }]
                    },
                    "jacquarderror": {
                      "ownKey": "jacquarderror",
                      "childrenPages": {"type": {
                        "ownKey": "type",
                        "ownPages": [{
                          "reference": {
                            "path": "javadoc",
                            "baseUrl": "/JacquardSDKAndroid",
                            "fileName": "com/google/android/jacquard/sdk/model/jacquarderror/type",
                            "extension": "html",
                            "usePrettyUrl": true,
                            "link": "/JacquardSDKAndroid/javadoc/com/google/android/jacquard/sdk/model/jacquarderror/type"
                          },
                          "description": "",
                          "title": "JacquardError.Type",
                          "content": "<p>INTERNAL_ERROR<\/p>\n<p>EMPTY_RESPONSE_ERROR<\/p>\n<p>MALFORMED_RESPONSE_ERROR<\/p>\n<p>UNKNOWN_CORE_BLUETOOTH_ERROR<\/p>\n<p>BLUETOOTH_CONNECTION_ERROR<\/p>\n<p>BLUETOOTH_OFF_ERROR<\/p>\n<p>BLUETOOTH_NOTIFICATION_UPDATE_ERROR<\/p>\n<p>SERVICE_DISCOVERY_ERROR<\/p>\n<p>CHARACTERISTIC_DISCOVERY_ERROR<\/p>\n<p>JACQUARD_INITIALIZATION_ERROR<\/p>\n<p>values<\/p>\n<p>valueOf<\/p>\n"
                        }]
                      }},
                      "ownPages": [{
                        "reference": {
                          "path": "javadoc",
                          "baseUrl": "/JacquardSDKAndroid",
                          "fileName": "com/google/android/jacquard/sdk/model/jacquarderror",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "/JacquardSDKAndroid/javadoc/com/google/android/jacquard/sdk/model/jacquarderror"
                        },
                        "description": "",
                        "title": "JacquardError",
                        "content": "<p>The different errors the SDK can report.JacquardError<\/p>\n<p>ofInternalError<\/p>\n<p>ofEmptyResponseError<\/p>\n<p>ofMalformedResponseError<\/p>\n<p>ofUnknownCoreBluetoothError<\/p>\n<p>ofBluetoothConnectionError<\/p>\n<p>ofBluetoothNotificationUpdateError<\/p>\n<p>ofServiceDiscoveryError<\/p>\n<p>ofJacquardInitializationError<\/p>\n<p>ofBluetoothOffError<\/p>\n<p>getType<\/p>\n<p>internalError<\/p>\n<p>emptyResponseError<\/p>\n<p>malformedResponseError<\/p>\n<p>unknownCoreBluetoothError<\/p>\n<p>bluetoothConnectionError<\/p>\n<p>bluetoothNotificationUpdateError<\/p>\n<p>bluetoothOffError<\/p>\n<p>serviceDiscoveryError<\/p>\n<p>characteristicDiscoveryError<\/p>\n<p>jacquardInitializationError<\/p>\n<p>getMessage<\/p>\n"
                      }]
                    },
                    "sdkconfig": {
                      "ownKey": "sdkconfig",
                      "ownPages": [{
                        "reference": {
                          "path": "javadoc",
                          "baseUrl": "/JacquardSDKAndroid",
                          "fileName": "com/google/android/jacquard/sdk/model/sdkconfig",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "/JacquardSDKAndroid/javadoc/com/google/android/jacquard/sdk/model/sdkconfig"
                        },
                        "description": "",
                        "title": "SdkConfig",
                        "content": "<p>Data class for sdk initialization.SdkConfig<\/p>\n<p>of<\/p>\n<p>clientId\nThe client id.\napiKey\nThe api key.\ncloudEndpointUrl\nCloud endpoint url. Defaults to production cloud endpoint.<\/p>\n"
                      }]
                    },
                    "characteristicupdate": {
                      "ownKey": "characteristicupdate",
                      "ownPages": [{
                        "reference": {
                          "path": "javadoc",
                          "baseUrl": "/JacquardSDKAndroid",
                          "fileName": "com/google/android/jacquard/sdk/model/characteristicupdate",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "/JacquardSDKAndroid/javadoc/com/google/android/jacquard/sdk/model/characteristicupdate"
                        },
                        "description": "",
                        "title": "CharacteristicUpdate",
                        "content": "<p>Data class emitted by BleAdapter when a\nread, write or notification callback is received.CharacteristicUpdate<\/p>\n<p>of\nCreates a new instance of CharacteristicUpdate.\nperipheral\nThe peripheral that reported the event.\ncharacteristic\nThe characteristic that was updated.<\/p>\n"
                      }]
                    },
                    "component": {
                      "ownKey": "component",
                      "ownPages": [{
                        "reference": {
                          "path": "javadoc",
                          "baseUrl": "/JacquardSDKAndroid",
                          "fileName": "com/google/android/jacquard/sdk/model/component",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "/JacquardSDKAndroid/javadoc/com/google/android/jacquard/sdk/model/component"
                        },
                        "description": "",
                        "title": "Component",
                        "content": "<p>Class describing a entity that has a set of Capability that can be executed.TAG_ID\nUnique id for the Tag Component.\nComponent<\/p>\n<p>of\nCreates a new instance of Component.\ncomponentId\nThe Id of the component. Used when executing commands.\nvendor\nThe vendor of this component.\nproduct\nThe product associated with this component.\ngearCapabilities\nList of supported capabilities.\nversion\nFirmware version of the device .\nserialNumber\nManufacturer serial number.<\/p>\n"
                      }]
                    },
                    "protocolspec": {
                      "ownKey": "protocolspec",
                      "ownPages": [{
                        "reference": {
                          "path": "javadoc",
                          "baseUrl": "/JacquardSDKAndroid",
                          "fileName": "com/google/android/jacquard/sdk/model/protocolspec",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "/JacquardSDKAndroid/javadoc/com/google/android/jacquard/sdk/model/protocolspec"
                        },
                        "description": "",
                        "title": "ProtocolSpec",
                        "content": "<p>Holds supported MTU size Jacquard protocol versions.UNKNOWN<\/p>\n<p>VERSION_1<\/p>\n<p>VERSION_2<\/p>\n<p>values<\/p>\n<p>valueOf<\/p>\n<p>getProtocolId\nReturns the protocol Id\ngetMtuSize\nReturns the supports MTU size.<\/p>\n"
                      }]
                    },
                    "vendor": {
                      "ownKey": "vendor",
                      "ownPages": [{
                        "reference": {
                          "path": "javadoc",
                          "baseUrl": "/JacquardSDKAndroid",
                          "fileName": "com/google/android/jacquard/sdk/model/vendor",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "/JacquardSDKAndroid/javadoc/com/google/android/jacquard/sdk/model/vendor"
                        },
                        "description": "",
                        "title": "Vendor",
                        "content": "<p>Defines Vendor type of the Gear.Vendor<\/p>\n<p>id\nUnique identifier of the Vendor.\nname\nName of the Vendor.\nproducts\nList of products for this vendor.\nof<\/p>\n"
                      }]
                    },
                    "touchmode": {
                      "ownKey": "touchmode",
                      "ownPages": [{
                        "reference": {
                          "path": "javadoc",
                          "baseUrl": "/JacquardSDKAndroid",
                          "fileName": "com/google/android/jacquard/sdk/model/touchmode",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "/JacquardSDKAndroid/javadoc/com/google/android/jacquard/sdk/model/touchmode"
                        },
                        "description": "",
                        "title": "TouchMode",
                        "content": "<p>The different type of touch mode the a gear can be in. TouchMode The tag will emit gestures. TouchMode The tag will emit raw touch data.GESTURE<\/p>\n<p>CONTINUOUS<\/p>\n<p>values<\/p>\n<p>valueOf<\/p>\n"
                      }]
                    },
                    "failedtoconnect": {
                      "ownKey": "failedtoconnect",
                      "ownPages": [{
                        "reference": {
                          "path": "javadoc",
                          "baseUrl": "/JacquardSDKAndroid",
                          "fileName": "com/google/android/jacquard/sdk/model/failedtoconnect",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "/JacquardSDKAndroid/javadoc/com/google/android/jacquard/sdk/model/failedtoconnect"
                        },
                        "description": "",
                        "title": "FailedToConnect",
                        "content": "<p>Error reported by BleAdapter when connection failed.FailedToConnect<\/p>\n<p>of\nCreates a new instance of FailedToConnect.\nperipheral\nThe peripheral the connected failed to.\nerror\nThe error reported by BleAdapter .<\/p>\n"
                      }]
                    },
                    "deviceconfigelement": {
                      "ownKey": "deviceconfigelement",
                      "ownPages": [{
                        "reference": {
                          "path": "javadoc",
                          "baseUrl": "/JacquardSDKAndroid",
                          "fileName": "com/google/android/jacquard/sdk/model/deviceconfigelement",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "/JacquardSDKAndroid/javadoc/com/google/android/jacquard/sdk/model/deviceconfigelement"
                        },
                        "description": "",
                        "title": "DeviceConfigElement",
                        "content": "<p>Model class to write config values to tag.\nSee SetConfigCommand .DeviceConfigElement<\/p>\n<p>vendorId<\/p>\n<p>productId<\/p>\n<p>key<\/p>\n<p>type<\/p>\n<p>value<\/p>\n<p>create<\/p>\n<p>create<\/p>\n"
                      }]
                    },
                    "componentcapability": {
                      "ownKey": "componentcapability",
                      "ownPages": [{
                        "reference": {
                          "path": "javadoc",
                          "baseUrl": "/JacquardSDKAndroid",
                          "fileName": "com/google/android/jacquard/sdk/model/componentcapability",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "/JacquardSDKAndroid/javadoc/com/google/android/jacquard/sdk/model/componentcapability"
                        },
                        "description": "",
                        "title": "ComponentCapability",
                        "content": "<p>Defines Capabilities assign to specific component from cloud.ComponentCapability<\/p>\n<p>vendorId\nReturns vendor id for the Component.\nproductId\nReturns product id for the Component.\ncapabilityIds\nReturns list of capability ids for the Component.<\/p>\n"
                      }]
                    },
                    "touchdata": {
                      "ownKey": "touchdata",
                      "ownPages": [{
                        "reference": {
                          "path": "javadoc",
                          "baseUrl": "/JacquardSDKAndroid",
                          "fileName": "com/google/android/jacquard/sdk/model/touchdata",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "/JacquardSDKAndroid/javadoc/com/google/android/jacquard/sdk/model/touchdata"
                        },
                        "description": "",
                        "title": "TouchData",
                        "content": "<p>Data class holding raw data emitted when the tag is set on TouchMode .TouchData<\/p>\n<p>of\nCreates a new instance of TouchData from a JacquardProtocol.TouchData .\nlines\nThe raw touch data encoded as a list of 12 unsigned integers.\nOne integer per lines but not all lines may be active on each product.\nThe values are in the range 0-127 depicting the intensity.\nsequence\nSequence byte. This can be used by to verify that every sample has been processed.\nproximity\nProximity Diff Data<\/p>\n"
                      }]
                    }
                  },
                  "ownPages": [{
                    "reference": {
                      "path": "javadoc",
                      "baseUrl": "/JacquardSDKAndroid",
                      "fileName": "com/google/android/jacquard/sdk/model",
                      "extension": "html",
                      "usePrettyUrl": true,
                      "link": "/JacquardSDKAndroid/javadoc/com/google/android/jacquard/sdk/model"
                    },
                    "description": "",
                    "title": "com.google.android.jacquard.sdk.model",
                    "content": "<p>FailedToConnect\nError reported by BleAdapter when connection failed.\nComponentCapability\nDefines Capabilities assign to specific component from cloud.\nComponentKey\nActs as a Key to hold list of capabilities, which are assigned to combination of Vendor and\nProduct.\nVendor\nDefines Vendor type of the Gear.\nRssiUpdate\nData class emitted by BleAdapter when a read remote rssi\nnotification callback is received.\nCharacteristicUpdate\nData class emitted by BleAdapter when a\nread, write or notification callback is received.\nGearState\nThe attached state of a gear.\nGearState.Type<\/p>\n<p>Component\nClass describing a entity that has a set of Capability that can be executed.\nServicesDiscovered\nData class for holding BluetoothGattService discovered for a tag.\nSdkConfig\nData class for sdk initialization.\nRevision\nData class for firmware revisions.\nPeripheral\nWrapper around BluetoothGatt that executes BLE commands using a queue.\nPeripheral.WriteType\nWriteType describes the type of writes are supported.\nJacquardError\nThe different errors the SDK can report.\nJacquardError.Type<\/p>\n<p>VidPidMid\nData class to bundle vendor id, product id &amp; module id together.\nVidPidMid.Builder\nBuilder for VidPidMid\nModule\nModel class for loadable module.\nProtocolSpec\nHolds supported MTU size Jacquard protocol versions.\nTouchMode\nThe different type of touch mode the a gear can be in. TouchMode The tag will emit gestures. TouchMode The tag will emit raw touch data.\nProduct\nDefines Product type of the Gear.\nProduct.Capability<\/p>\n<p>TouchData\nData class holding raw data emitted when the tag is set on TouchMode .\nGesture\nClass describing the different gestures supported by Jacquard.\nGesture.GestureType<\/p>\n<p>InternalComponent\nInformation describing a component.\nDeviceConfigElement\nModel class to write config values to tag.\nSee SetConfigCommand .<\/p>\n"
                  }]
                },
                "statemachine": {
                  "ownKey": "statemachine",
                  "ownPages": [{
                    "reference": {
                      "path": "javadoc",
                      "baseUrl": "/JacquardSDKAndroid",
                      "fileName": "com/google/android/jacquard/sdk/statemachine",
                      "extension": "html",
                      "usePrettyUrl": true,
                      "link": "/JacquardSDKAndroid/javadoc/com/google/android/jacquard/sdk/statemachine"
                    },
                    "description": "",
                    "title": "StateMachine",
                    "content": "<p>Common interface for all state machine implementations.getState\nReturns a signal for observing the state of the state mashing.\nonStateEvent\nCall to react to events emitted.\ndestroy\nReleases all allocated resources.<\/p>\n"
                  }]
                },
                "tag": {
                  "ownKey": "tag",
                  "childrenPages": {
                    "advertisedjacquardtagimpl": {
                      "ownKey": "advertisedjacquardtagimpl",
                      "ownPages": [{
                        "reference": {
                          "path": "javadoc",
                          "baseUrl": "/JacquardSDKAndroid",
                          "fileName": "com/google/android/jacquard/sdk/tag/advertisedjacquardtagimpl",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "/JacquardSDKAndroid/javadoc/com/google/android/jacquard/sdk/tag/advertisedjacquardtagimpl"
                        },
                        "description": "",
                        "title": "AdvertisedJacquardTagImpl",
                        "content": "<p>Concrete implementation of AdvertisedJacquardTag .AdvertisedJacquardTagImpl<\/p>\n<p>of<\/p>\n<p>rssiSignal<\/p>\n<p>bluetoothDevice<\/p>\n<p>pairingSerialNumber<\/p>\n<p>address<\/p>\n<p>displayName<\/p>\n<p>equals<\/p>\n"
                      }]
                    },
                    "jacquardtag": {
                      "ownKey": "jacquardtag",
                      "ownPages": [{
                        "reference": {
                          "path": "javadoc",
                          "baseUrl": "/JacquardSDKAndroid",
                          "fileName": "com/google/android/jacquard/sdk/tag/jacquardtag",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "/JacquardSDKAndroid/javadoc/com/google/android/jacquard/sdk/tag/jacquardtag"
                        },
                        "description": "",
                        "title": "JacquardTag",
                        "content": "<p>Based interface for Jacquard tags.address\nThe bluetooth address of the tag.\ndisplayName\nThe name of the tag to display in the UI.\nrssiSignal\nReturns the rssi signal strength for the tag.<br/>During ble scanning as and when available\nwill be notified. When tag get connected, rssi value will be notified every second.<\/p>\n"
                      }]
                    },
                    "advertisedjacquardtag": {
                      "ownKey": "advertisedjacquardtag",
                      "ownPages": [{
                        "reference": {
                          "path": "javadoc",
                          "baseUrl": "/JacquardSDKAndroid",
                          "fileName": "com/google/android/jacquard/sdk/tag/advertisedjacquardtag",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "/JacquardSDKAndroid/javadoc/com/google/android/jacquard/sdk/tag/advertisedjacquardtag"
                        },
                        "description": "",
                        "title": "AdvertisedJacquardTag",
                        "content": "<p>A Jacquard tag that has been discovered during a Bluetooth LE scan.<\/p>\n <p>\n A connection to the tag can be established by calling JacquardManager .bluetoothDevice\nThe tag as a BluetoothDevice .\npairingSerialNumber\nSerial number used during pairing. The last 4 digit of the UJT serial number\n"
                      }]
                    },
                    "connectedjacquardtagimpl": {
                      "ownKey": "connectedjacquardtagimpl",
                      "ownPages": [{
                        "reference": {
                          "path": "javadoc",
                          "baseUrl": "/JacquardSDKAndroid",
                          "fileName": "com/google/android/jacquard/sdk/tag/connectedjacquardtagimpl",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "/JacquardSDKAndroid/javadoc/com/google/android/jacquard/sdk/tag/connectedjacquardtagimpl"
                        },
                        "description": "",
                        "title": "ConnectedJacquardTagImpl",
                        "content": "<p>Concrete implementation of ConnectedJacquardTag .ConnectedJacquardTagImpl\nConstructs a new instance of ConnectedJacquardTagImpl.\nserialNumber<\/p>\n<p>getCustomAdvName<\/p>\n<p>tagComponent<\/p>\n<p>gearComponent<\/p>\n<p>getComponents<\/p>\n<p>dfuManager<\/p>\n<p>getConnectedGearSignal<\/p>\n<p>setTouchMode<\/p>\n<p>enqueue<\/p>\n<p>enqueue<\/p>\n<p>enqueue<\/p>\n<p>subscribe<\/p>\n<p>getDataTransport<\/p>\n<p>getRawData<\/p>\n<p>getRemoteModules<\/p>\n<p>address<\/p>\n<p>displayName<\/p>\n<p>rssiSignal<\/p>\n<p>requestConnectionPriority<\/p>\n<p>sendData<\/p>\n<p>getAckSignal<\/p>\n<p>destroy<\/p>\n"
                      }]
                    },
                    "connectedjacquardtag": {
                      "ownKey": "connectedjacquardtag",
                      "ownPages": [{
                        "reference": {
                          "path": "javadoc",
                          "baseUrl": "/JacquardSDKAndroid",
                          "fileName": "com/google/android/jacquard/sdk/tag/connectedjacquardtag",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "/JacquardSDKAndroid/javadoc/com/google/android/jacquard/sdk/tag/connectedjacquardtag"
                        },
                        "description": "",
                        "title": "ConnectedJacquardTag",
                        "content": "<p>This is a tag in connected state.<\/p>\n <p>A connected tag is obtained by calling JacquardManager .serialNumber\nThe tags serial number.\ngetCustomAdvName\nSignal for observing the name of the tag.\ntagComponent\nThe component of the tag.\ngearComponent\nThe component of the gear.\ngetComponents\nReturns the list of all component which are associated to current tag.\ndfuManager\nThe DfuManger for firmware update.\ngetConnectedGearSignal\nSignal for observing the connected gear.\nsetTouchMode\nSets the tag in the specified TouchMode mode. For this command, tag should be\n attached to the gear.\nsubscribe\nSubscribes to notification.\ngetDataTransport\n\ngetRawData\n\ngetRemoteModules\n\nrequestConnectionPriority\nThis function will send a connection parameter update request to the remote device.\nenqueue\nSends a request to the tag.\nenqueue\nSends a request to the tag.\nenqueue\nSends a request to the tag.\nsendData\nSend non-fragmented data to the ujt over data/raw characteristics.\ngetAckSignal\nReturns a signal to receive ack packets sent by ujt.\n"
                      }]
                    }
                  },
                  "ownPages": [{
                    "reference": {
                      "path": "javadoc",
                      "baseUrl": "/JacquardSDKAndroid",
                      "fileName": "com/google/android/jacquard/sdk/tag",
                      "extension": "html",
                      "usePrettyUrl": true,
                      "link": "/JacquardSDKAndroid/javadoc/com/google/android/jacquard/sdk/tag"
                    },
                    "description": "",
                    "title": "com.google.android.jacquard.sdk.tag",
                    "content": "<p>ConnectedJacquardTagImpl\nConcrete implementation of ConnectedJacquardTag .\nAdvertisedJacquardTagImpl\nConcrete implementation of AdvertisedJacquardTag .\nAdvertisedJacquardTag\nA Jacquard tag that has been discovered during a Bluetooth LE scan.<\/p>\n <p>\n A connection to the tag can be established by calling JacquardManager .\nJacquardTag\nBased interface for Jacquard tags.\nConnectedJacquardTag\nThis is a tag in connected state.\n\n <p>A connected tag is obtained by calling JacquardManager .\n"
                  }]
                }
              },
              "ownPages": [{
                "reference": {
                  "path": "javadoc",
                  "baseUrl": "/JacquardSDKAndroid",
                  "fileName": "com/google/android/jacquard/sdk",
                  "extension": "html",
                  "usePrettyUrl": true,
                  "link": "/JacquardSDKAndroid/javadoc/com/google/android/jacquard/sdk"
                },
                "description": "",
                "title": "com.google.android.jacquard.sdk",
                "content": "<p>ConnectState\nData class holding the different state the bluetooth connection can be in.\nConnectState.Type<\/p>\n<p>ManagerScanningException\nBase class for all exceptions thrown by JacquardManager .\nManagerScanningException.BluetoothUnavailableException\nException thrown when the Bluetooth adapter is disabled.\nManagerScanningException.BluetoothDeviceNotFound\nException throws when a Bluetooth device is not found.\nMemoryCache<\/p>\n<p>StateMachine\nCommon interface for all state machine implementations.\nBleQueue\nQueue for executing BLE commands synchronously.\nBleQueue.Command\nCommand class wrapping a runnable BLE command.\nBleQueue.Command.Type\nThe type of BLE command requested. This is used to make sure the requests/responses are in\nsync.\nJacquardManager\nInterface for scanning for and connecting to Jacquard Tags. <br/> DO NOT forget to call JacquardManager before calling any apis.\nJqExtensionRegistry\nClass holding the extension registry for Jacquard.\nSdkInitProvider\nContentsProviders are initialized and called directly after the application\u2019s object is created.\nThis class creates an instance of JacquardManagerImpl and makes sure that it is\naccessible via JacquardManager when the application is launched.\ncom.google.android.jacquard.sdk.pairing<\/p>\n<p>com.google.android.jacquard.sdk.dfu<\/p>\n<p>com.google.android.jacquard.sdk.connection<\/p>\n<p>com.google.android.jacquard.sdk.util<\/p>\n<p>com.google.android.jacquard.sdk.lm<\/p>\n<p>com.google.android.jacquard.sdk.initialization<\/p>\n<p>com.google.android.jacquard.sdk.imu<\/p>\n<p>com.google.android.jacquard.sdk.datastore<\/p>\n<p>com.google.android.jacquard.sdk.model<\/p>\n<p>com.google.android.jacquard.sdk.log<\/p>\n<p>com.google.android.jacquard.sdk.command<\/p>\n<p>com.google.android.jacquard.sdk.tag<\/p>\n<p>com.google.android.jacquard.sdk.rx<\/p>\n<p>com.google.android.jacquard.sdk.remote<\/p>\n"
              }]
            }}
          }}
        }}
      }}
    }},
    "ownPages": [{
      "reference": {
        "path": "javadoc",
        "baseUrl": "/JacquardSDKAndroid",
        "fileName": "",
        "extension": "html",
        "usePrettyUrl": true,
        "link": "/JacquardSDKAndroid/javadoc"
      },
      "description": "",
      "title": "README",
      "content": "<h2 id=\"getting-started\"><a href=\"#getting-started\" id=\"getting-started\" class=\"anchor\"><\/a>Getting started<\/h2>\n<p>Jacquard™ by Google weaves new digital experiences into the things you\nlove, wear, and use every day to give you the power to do more and be\nmore.  Jacquard SDK is a way to connect Jacquard interactions within\nyour apps.  Create an app and bring it to life with swipes and taps\nthrough the Jacquard SDK.<\/p>\n<h2 id=\"what-do-i-need-to-get-started\"><a href=\"#what-do-i-need-to-get-started\" id=\"what-do-i-need-to-get-started\" class=\"anchor\"><\/a>What do I need to get started?<\/h2>\n<p>The Android Jacquard SDK supports Android versions 23 and greater.<\/p>\n<p>You will need the Jacquard Tag with a supported Jacquard product (all come with one tag). Currently supported products are:<\/p>\n<ul>\n<li>Levi's Trucker Jacket<\/li>\n<li>Samsonite Konnect-i backpack<\/li>\n<li>Saint Laurent Cit-e Backpack<\/li>\n<\/ul>\n<p>You can find links to purchase these products on the <a href=\"https://atap.google.com/jacquard/products/\">Google Jacquard website<\/a>.<\/p>\n<h2 id=\"sample-app\"><a href=\"#sample-app\" id=\"sample-app\" class=\"anchor\"><\/a>Sample App<\/h2>\n<p>To run the example project,<\/p>\n<ul>\n<li>Clone the git repo<\/li>\n<li>To enable firmware updating, you should obtain a Jacquard API Key:\n<ul>\n<li>Obtain a Jacquard API Key (<a href=\"https://google.github.io/JacquardSDKAndroid/wiki/cloud-api-terms/\">here<\/a>)<\/li>\n<li>Edit <code>sample/gradle.properties<\/code> and enter your API Key in the appropriate place:\n<pre><code>ApiKey=\n<\/code><\/pre>\n<\/li>\n<\/ul>\n<p>(You may also notice a placeholder for a Google Maps API Key - you may want one later to enable the Places demo feature in the sample app)<\/p>\n<\/li>\n<li>Launch Android Studio and open the <code>sample<\/code> directory in your checkout of the repository<\/li>\n<li>You can now build and run the Jacquard sample app on your device<\/li>\n<\/ul>\n<h2 id=\"next-steps\"><a href=\"#next-steps\" id=\"next-steps\" class=\"anchor\"><\/a>Next Steps<\/h2>\n<p>The best way to get started with the Jacquard SDK is to follow our tutorial.<\/p>\n<p>Once you have completed the tutorial, the best place to go next is the API Overview which will explain the features of your Jacquard tag and gear, and how to use the API. After that, check out the API Documentation (available in the table of contents on the left of every page) and build your awesome app.<\/p>\n<p>Full documentation including a tutorial is available <a href=\"https://google.github.io/JacquardSDKAndroid/\">here<\/a>.<\/p>\n<h2 id=\"ios-sdk\"><a href=\"#ios-sdk\" id=\"ios-sdk\" class=\"anchor\"><\/a>iOS SDK<\/h2>\n<p>You can also try out an iOS Jacquard SDK available <a href=\"https://github.com/google/JacquardSDKiOS\">here<\/a>.<\/p>\n<h2 id=\"copyright\"><a href=\"#copyright\" id=\"copyright\" class=\"anchor\"><\/a>Copyright<\/h2>\n<p>Copyright 2021 Google LLC<\/p>\n<h2 id=\"license\"><a href=\"#license\" id=\"license\" class=\"anchor\"><\/a>License<\/h2>\n<p>The code in this repository is licensed under the Apache License, Version 2.0. See the <a href=\"https://github.com/google/JacquardSDKAndroid/blob/main/LICENSE\">LICENSE<\/a> section for more info.<\/p>\n"
    }]
  }}
}